ARM GAS  /tmp/ccsmnm5j.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"algorithm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/algorithm/algorithm.c"
  18              		.section	.text.maxim_peaks_above_min_height,"ax",%progbits
  19              		.align	1
  20              		.global	maxim_peaks_above_min_height
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	maxim_peaks_above_min_height:
  26              	.LVL0:
  27              	.LFB67:
   1:Core/algorithm/algorithm.c **** /** \file algorithm.c ******************************************************
   2:Core/algorithm/algorithm.c **** *
   3:Core/algorithm/algorithm.c **** * Project: MAXREFDES117#
   4:Core/algorithm/algorithm.c **** * Filename: algorithm.cpp
   5:Core/algorithm/algorithm.c **** * Description: This module calculates the heart rate/SpO2 level
   6:Core/algorithm/algorithm.c **** *
   7:Core/algorithm/algorithm.c **** *
   8:Core/algorithm/algorithm.c **** * --------------------------------------------------------------------
   9:Core/algorithm/algorithm.c **** *
  10:Core/algorithm/algorithm.c **** * This code follows the following naming conventions:
  11:Core/algorithm/algorithm.c **** *
  12:Core/algorithm/algorithm.c **** * char              ch_pmod_value
  13:Core/algorithm/algorithm.c **** * char (array)      s_pmod_s_string[16]
  14:Core/algorithm/algorithm.c **** * float             f_pmod_value
  15:Core/algorithm/algorithm.c **** * int32_t           n_pmod_value
  16:Core/algorithm/algorithm.c **** * int32_t (array)   an_pmod_value[16]
  17:Core/algorithm/algorithm.c **** * int16_t           w_pmod_value
  18:Core/algorithm/algorithm.c **** * int16_t (array)   aw_pmod_value[16]
  19:Core/algorithm/algorithm.c **** * uint16_t          uw_pmod_value
  20:Core/algorithm/algorithm.c **** * uint16_t (array)  auw_pmod_value[16]
  21:Core/algorithm/algorithm.c **** * uint8_t           uch_pmod_value
  22:Core/algorithm/algorithm.c **** * uint8_t (array)   auch_pmod_buffer[16]
  23:Core/algorithm/algorithm.c **** * uint32_t          un_pmod_value
  24:Core/algorithm/algorithm.c **** * int32_t *         pn_pmod_value
  25:Core/algorithm/algorithm.c **** *
  26:Core/algorithm/algorithm.c **** * ------------------------------------------------------------------------- */
  27:Core/algorithm/algorithm.c **** /*******************************************************************************
  28:Core/algorithm/algorithm.c **** * Copyright (C) 2016 Maxim Integrated Products, Inc., All Rights Reserved.
  29:Core/algorithm/algorithm.c **** *
  30:Core/algorithm/algorithm.c **** * Permission is hereby granted, free of charge, to any person obtaining a
  31:Core/algorithm/algorithm.c **** * copy of this software and associated documentation files (the "Software"),
ARM GAS  /tmp/ccsmnm5j.s 			page 2


  32:Core/algorithm/algorithm.c **** * to deal in the Software without restriction, including without limitation
  33:Core/algorithm/algorithm.c **** * the rights to use, copy, modify, merge, publish, distribute, sublicense,
  34:Core/algorithm/algorithm.c **** * and/or sell copies of the Software, and to permit persons to whom the
  35:Core/algorithm/algorithm.c **** * Software is furnished to do so, subject to the following conditions:
  36:Core/algorithm/algorithm.c **** *
  37:Core/algorithm/algorithm.c **** * The above copyright notice and this permission notice shall be included
  38:Core/algorithm/algorithm.c **** * in all copies or substantial portions of the Software.
  39:Core/algorithm/algorithm.c **** *
  40:Core/algorithm/algorithm.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  41:Core/algorithm/algorithm.c **** * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  42:Core/algorithm/algorithm.c **** * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  43:Core/algorithm/algorithm.c **** * IN NO EVENT SHALL MAXIM INTEGRATED BE LIABLE FOR ANY CLAIM, DAMAGES
  44:Core/algorithm/algorithm.c **** * OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
  45:Core/algorithm/algorithm.c **** * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  46:Core/algorithm/algorithm.c **** * OTHER DEALINGS IN THE SOFTWARE.
  47:Core/algorithm/algorithm.c **** *
  48:Core/algorithm/algorithm.c **** * Except as contained in this notice, the name of Maxim Integrated
  49:Core/algorithm/algorithm.c **** * Products, Inc. shall not be used except as stated in the Maxim Integrated
  50:Core/algorithm/algorithm.c **** * Products, Inc. Branding Policy.
  51:Core/algorithm/algorithm.c **** *
  52:Core/algorithm/algorithm.c **** * The mere transfer of this software does not imply any licenses
  53:Core/algorithm/algorithm.c **** * of trade secrets, proprietary technology, copyrights, patents,
  54:Core/algorithm/algorithm.c **** * trademarks, maskwork rights, or any other form of intellectual
  55:Core/algorithm/algorithm.c **** * property whatsoever. Maxim Integrated Products, Inc. retains all
  56:Core/algorithm/algorithm.c **** * ownership rights.
  57:Core/algorithm/algorithm.c **** *******************************************************************************
  58:Core/algorithm/algorithm.c **** */
  59:Core/algorithm/algorithm.c **** #include "algorithm.h"
  60:Core/algorithm/algorithm.c **** 
  61:Core/algorithm/algorithm.c **** const uint16_t auw_hamm[31]={ 41,    276,    512,    276,     41 }; //Hamm=  long16(512* hamming(5)
  62:Core/algorithm/algorithm.c **** //uch_spo2_table is computed as  -45.060*ratioAverage* ratioAverage + 30.354 *ratioAverage + 94.845
  63:Core/algorithm/algorithm.c **** const uint8_t uch_spo2_table[184]={ 95, 95, 95, 96, 96, 96, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98,
  64:Core/algorithm/algorithm.c ****                             99, 99, 99, 99, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 
  65:Core/algorithm/algorithm.c ****                             100, 100, 100, 100, 99, 99, 99, 99, 99, 99, 99, 99, 98, 98, 98, 98, 98,
  66:Core/algorithm/algorithm.c ****                             97, 97, 96, 96, 96, 96, 95, 95, 95, 94, 94, 94, 93, 93, 93, 92, 92, 92,
  67:Core/algorithm/algorithm.c ****                             90, 90, 89, 89, 89, 88, 88, 87, 87, 86, 86, 85, 85, 84, 84, 83, 82, 82,
  68:Core/algorithm/algorithm.c ****                             80, 80, 79, 78, 78, 77, 76, 76, 75, 74, 74, 73, 72, 72, 71, 70, 69, 69,
  69:Core/algorithm/algorithm.c ****                             66, 66, 65, 64, 63, 62, 62, 61, 60, 59, 58, 57, 56, 56, 55, 54, 53, 52,
  70:Core/algorithm/algorithm.c ****                             49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 31,
  71:Core/algorithm/algorithm.c ****                             28, 27, 26, 25, 23, 22, 21, 20, 19, 17, 16, 15, 14, 12, 11, 10, 9, 7, 6
  72:Core/algorithm/algorithm.c ****                             3, 2, 1 } ;
  73:Core/algorithm/algorithm.c **** static  int32_t an_dx[ BUFFER_SIZE-MA4_SIZE]; // delta
  74:Core/algorithm/algorithm.c **** static  int32_t an_x[ BUFFER_SIZE]; //ir
  75:Core/algorithm/algorithm.c **** static  int32_t an_y[ BUFFER_SIZE]; //red
  76:Core/algorithm/algorithm.c **** 
  77:Core/algorithm/algorithm.c **** void maxim_heart_rate_and_oxygen_saturation(uint32_t *pun_ir_buffer,  int32_t n_ir_buffer_length, u
  78:Core/algorithm/algorithm.c ****                               int32_t *pn_heart_rate, int8_t  *pch_hr_valid)
  79:Core/algorithm/algorithm.c **** /**
  80:Core/algorithm/algorithm.c **** * \brief        Calculate the heart rate and SpO2 level
  81:Core/algorithm/algorithm.c **** * \par          Details
  82:Core/algorithm/algorithm.c **** *               By detecting  peaks of PPG cycle and corresponding AC/DC of red/infra-red signal, t
  83:Core/algorithm/algorithm.c **** *               Since this algorithm is aiming for Arm M0/M3. formaula for SPO2 did not achieve the
  84:Core/algorithm/algorithm.c **** *               Thus, accurate SPO2 is precalculated and save longo uch_spo2_table[] per each ratio
  85:Core/algorithm/algorithm.c **** *
  86:Core/algorithm/algorithm.c **** * \param[in]    *pun_ir_buffer           - IR sensor data buffer
  87:Core/algorithm/algorithm.c **** * \param[in]    n_ir_buffer_length      - IR sensor data buffer length
  88:Core/algorithm/algorithm.c **** * \param[in]    *pun_red_buffer          - Red sensor data buffer
ARM GAS  /tmp/ccsmnm5j.s 			page 3


  89:Core/algorithm/algorithm.c **** * \param[out]    *pn_spo2                - Calculated SpO2 value
  90:Core/algorithm/algorithm.c **** * \param[out]    *pch_spo2_valid         - 1 if the calculated SpO2 value is valid
  91:Core/algorithm/algorithm.c **** * \param[out]    *pn_heart_rate          - Calculated heart rate value
  92:Core/algorithm/algorithm.c **** * \param[out]    *pch_hr_valid           - 1 if the calculated heart rate value is valid
  93:Core/algorithm/algorithm.c **** *
  94:Core/algorithm/algorithm.c **** * \retval       None
  95:Core/algorithm/algorithm.c **** */
  96:Core/algorithm/algorithm.c **** {
  97:Core/algorithm/algorithm.c ****     uint32_t un_ir_mean ,un_only_once ;
  98:Core/algorithm/algorithm.c ****     int32_t k ,n_i_ratio_count;
  99:Core/algorithm/algorithm.c ****     int32_t i, s, m, n_exact_ir_valley_locs_count ,n_middle_idx;
 100:Core/algorithm/algorithm.c ****     int32_t n_th1, n_npks,n_c_min;      
 101:Core/algorithm/algorithm.c ****     int32_t an_ir_valley_locs[15] ;
 102:Core/algorithm/algorithm.c ****     int32_t an_exact_ir_valley_locs[15] ;
 103:Core/algorithm/algorithm.c ****     int32_t an_dx_peak_locs[15] ;
 104:Core/algorithm/algorithm.c ****     int32_t n_peak_interval_sum;
 105:Core/algorithm/algorithm.c ****     
 106:Core/algorithm/algorithm.c ****     int32_t n_y_ac, n_x_ac;
 107:Core/algorithm/algorithm.c ****     int32_t n_spo2_calc; 
 108:Core/algorithm/algorithm.c ****     int32_t n_y_dc_max, n_x_dc_max; 
 109:Core/algorithm/algorithm.c ****     int32_t n_y_dc_max_idx, n_x_dc_max_idx; 
 110:Core/algorithm/algorithm.c ****     int32_t an_ratio[5],n_ratio_average; 
 111:Core/algorithm/algorithm.c ****     int32_t n_nume,  n_denom ;
 112:Core/algorithm/algorithm.c ****     // remove DC of ir signal    
 113:Core/algorithm/algorithm.c ****     un_ir_mean =0; 
 114:Core/algorithm/algorithm.c ****     for (k=0 ; k<n_ir_buffer_length ; k++ ) un_ir_mean += pun_ir_buffer[k] ;
 115:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 116:Core/algorithm/algorithm.c ****     for (k=0 ; k<n_ir_buffer_length ; k++ )  an_x[k] =  pun_ir_buffer[k] - un_ir_mean ; 
 117:Core/algorithm/algorithm.c ****     
 118:Core/algorithm/algorithm.c ****     // 4 pt Moving Average
 119:Core/algorithm/algorithm.c ****     for(k=0; k< BUFFER_SIZE-MA4_SIZE; k++){
 120:Core/algorithm/algorithm.c ****         n_denom= ( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3]);
 121:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 122:Core/algorithm/algorithm.c ****     }
 123:Core/algorithm/algorithm.c **** 
 124:Core/algorithm/algorithm.c ****     // get difference of smoothed IR signal
 125:Core/algorithm/algorithm.c ****     
 126:Core/algorithm/algorithm.c ****     for( k=0; k<BUFFER_SIZE-MA4_SIZE-1;  k++)
 127:Core/algorithm/algorithm.c ****         an_dx[k]= (an_x[k+1]- an_x[k]);
 128:Core/algorithm/algorithm.c **** 
 129:Core/algorithm/algorithm.c ****     // 2-pt Moving Average to an_dx
 130:Core/algorithm/algorithm.c ****     for(k=0; k< BUFFER_SIZE-MA4_SIZE-2; k++){
 131:Core/algorithm/algorithm.c ****         an_dx[k] =  ( an_dx[k]+an_dx[k+1])/2 ;
 132:Core/algorithm/algorithm.c ****     }
 133:Core/algorithm/algorithm.c ****     
 134:Core/algorithm/algorithm.c ****     // hamming window
 135:Core/algorithm/algorithm.c ****     // flip wave form so that we can detect valley with peak detector
 136:Core/algorithm/algorithm.c ****     for ( i=0 ; i<BUFFER_SIZE-HAMMING_SIZE-MA4_SIZE-2 ;i++){
 137:Core/algorithm/algorithm.c ****         s= 0;
 138:Core/algorithm/algorithm.c ****         for( k=i; k<i+ HAMMING_SIZE ;k++){
 139:Core/algorithm/algorithm.c ****             s -= an_dx[k] *auw_hamm[k-i] ; 
 140:Core/algorithm/algorithm.c ****                      }
 141:Core/algorithm/algorithm.c ****         an_dx[i]= s/ (int32_t)1146; // divide by sum of auw_hamm 
 142:Core/algorithm/algorithm.c ****     }
 143:Core/algorithm/algorithm.c **** 
 144:Core/algorithm/algorithm.c ****  
 145:Core/algorithm/algorithm.c ****     n_th1=0; // threshold calculation
ARM GAS  /tmp/ccsmnm5j.s 			page 4


 146:Core/algorithm/algorithm.c ****     for ( k=0 ; k<BUFFER_SIZE-HAMMING_SIZE ;k++){
 147:Core/algorithm/algorithm.c ****         n_th1 += ((an_dx[k]>0)? an_dx[k] : ((int32_t)0-an_dx[k])) ;
 148:Core/algorithm/algorithm.c ****     }
 149:Core/algorithm/algorithm.c ****     n_th1= n_th1/ ( BUFFER_SIZE-HAMMING_SIZE);
 150:Core/algorithm/algorithm.c ****     // peak location is acutally index for sharpest location of raw signal since we flipped the sig
 151:Core/algorithm/algorithm.c ****     maxim_find_peaks( an_dx_peak_locs, &n_npks, an_dx, BUFFER_SIZE-HAMMING_SIZE, n_th1, 8, 5 );//pe
 152:Core/algorithm/algorithm.c **** 
 153:Core/algorithm/algorithm.c ****     n_peak_interval_sum =0;
 154:Core/algorithm/algorithm.c ****     if (n_npks>=2){
 155:Core/algorithm/algorithm.c ****         for (k=1; k<n_npks; k++)
 156:Core/algorithm/algorithm.c ****             n_peak_interval_sum += (an_dx_peak_locs[k]-an_dx_peak_locs[k -1]);
 157:Core/algorithm/algorithm.c ****         n_peak_interval_sum=n_peak_interval_sum/(n_npks-1);
 158:Core/algorithm/algorithm.c ****         *pn_heart_rate=(int32_t)(6000/n_peak_interval_sum);// beats per minutes
 159:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 1;
 160:Core/algorithm/algorithm.c ****     }
 161:Core/algorithm/algorithm.c ****     else  {
 162:Core/algorithm/algorithm.c ****         *pn_heart_rate = -999;
 163:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 0;
 164:Core/algorithm/algorithm.c ****     }
 165:Core/algorithm/algorithm.c ****             
 166:Core/algorithm/algorithm.c ****     for ( k=0 ; k<n_npks ;k++)
 167:Core/algorithm/algorithm.c ****         an_ir_valley_locs[k]=an_dx_peak_locs[k]+HAMMING_SIZE/2; 
 168:Core/algorithm/algorithm.c **** 
 169:Core/algorithm/algorithm.c **** 
 170:Core/algorithm/algorithm.c ****     // raw value : RED(=y) and IR(=X)
 171:Core/algorithm/algorithm.c ****     // we need to assess DC and AC value of ir and red PPG. 
 172:Core/algorithm/algorithm.c ****     for (k=0 ; k<n_ir_buffer_length ; k++ )  {
 173:Core/algorithm/algorithm.c ****         an_x[k] =  pun_ir_buffer[k] ; 
 174:Core/algorithm/algorithm.c ****         an_y[k] =  pun_red_buffer[k] ; 
 175:Core/algorithm/algorithm.c ****     }
 176:Core/algorithm/algorithm.c **** 
 177:Core/algorithm/algorithm.c ****     // find precise min near an_ir_valley_locs
 178:Core/algorithm/algorithm.c ****     n_exact_ir_valley_locs_count =0; 
 179:Core/algorithm/algorithm.c ****     for(k=0 ; k<n_npks ;k++){
 180:Core/algorithm/algorithm.c ****         un_only_once =1;
 181:Core/algorithm/algorithm.c ****         m=an_ir_valley_locs[k];
 182:Core/algorithm/algorithm.c ****         n_c_min= 16777216;//2^24;
 183:Core/algorithm/algorithm.c ****         if (m+5 <  BUFFER_SIZE-HAMMING_SIZE  && m-5 >0){
 184:Core/algorithm/algorithm.c ****             for(i= m-5;i<m+5; i++)
 185:Core/algorithm/algorithm.c ****                 if (an_x[i]<n_c_min){
 186:Core/algorithm/algorithm.c ****                     if (un_only_once >0){
 187:Core/algorithm/algorithm.c ****                        un_only_once =0;
 188:Core/algorithm/algorithm.c ****                    } 
 189:Core/algorithm/algorithm.c ****                    n_c_min= an_x[i] ;
 190:Core/algorithm/algorithm.c ****                    an_exact_ir_valley_locs[k]=i;
 191:Core/algorithm/algorithm.c ****                 }
 192:Core/algorithm/algorithm.c ****             if (un_only_once ==0)
 193:Core/algorithm/algorithm.c ****                 n_exact_ir_valley_locs_count ++ ;
 194:Core/algorithm/algorithm.c ****         }
 195:Core/algorithm/algorithm.c ****     }
 196:Core/algorithm/algorithm.c ****     if (n_exact_ir_valley_locs_count <2 ){
 197:Core/algorithm/algorithm.c ****        *pn_spo2 =  -999 ; // do not use SPO2 since signal ratio is out of range
 198:Core/algorithm/algorithm.c ****        *pch_spo2_valid  = 0; 
 199:Core/algorithm/algorithm.c ****        return;
 200:Core/algorithm/algorithm.c ****     }
 201:Core/algorithm/algorithm.c ****     // 4 pt MA
 202:Core/algorithm/algorithm.c ****     for(k=0; k< BUFFER_SIZE-MA4_SIZE; k++){
ARM GAS  /tmp/ccsmnm5j.s 			page 5


 203:Core/algorithm/algorithm.c ****         an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int32_t)4;
 204:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 205:Core/algorithm/algorithm.c ****     }
 206:Core/algorithm/algorithm.c **** 
 207:Core/algorithm/algorithm.c ****     //using an_exact_ir_valley_locs , find ir-red DC andir-red AC for SPO2 calibration ratio
 208:Core/algorithm/algorithm.c ****     //finding AC/DC maximum of raw ir * red between two valley locations
 209:Core/algorithm/algorithm.c ****     n_ratio_average =0; 
 210:Core/algorithm/algorithm.c ****     n_i_ratio_count =0; 
 211:Core/algorithm/algorithm.c ****     
 212:Core/algorithm/algorithm.c ****     for(k=0; k< 5; k++) an_ratio[k]=0;
 213:Core/algorithm/algorithm.c ****     for (k=0; k< n_exact_ir_valley_locs_count; k++){
 214:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k] > BUFFER_SIZE ){             
 215:Core/algorithm/algorithm.c ****             *pn_spo2 =  -999 ; // do not use SPO2 since valley loc is out of range
 216:Core/algorithm/algorithm.c ****             *pch_spo2_valid  = 0; 
 217:Core/algorithm/algorithm.c ****             return;
 218:Core/algorithm/algorithm.c ****         }
 219:Core/algorithm/algorithm.c ****     }
 220:Core/algorithm/algorithm.c ****     // find max between two valley locations 
 221:Core/algorithm/algorithm.c ****     // and use ratio betwen AC compoent of Ir & Red and DC compoent of Ir & Red for SPO2 
 222:Core/algorithm/algorithm.c **** 
 223:Core/algorithm/algorithm.c ****     for (k=0; k< n_exact_ir_valley_locs_count-1; k++){
 224:Core/algorithm/algorithm.c ****         n_y_dc_max= -16777216 ; 
 225:Core/algorithm/algorithm.c ****         n_x_dc_max= - 16777216; 
 226:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k+1]-an_exact_ir_valley_locs[k] >10){
 227:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
 228:Core/algorithm/algorithm.c ****                 if (an_x[i]> n_x_dc_max) {n_x_dc_max =an_x[i];n_x_dc_max_idx =i; }
 229:Core/algorithm/algorithm.c ****                 if (an_y[i]> n_y_dc_max) {n_y_dc_max =an_y[i];n_y_dc_max_idx=i;}
 230:Core/algorithm/algorithm.c ****             }
 231:Core/algorithm/algorithm.c ****             n_y_ac= (an_y[an_exact_ir_valley_locs[k+1]] - an_y[an_exact_ir_valley_locs[k] ] )*(n_y_
 232:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 233:Core/algorithm/algorithm.c ****         
 234:Core/algorithm/algorithm.c ****         
 235:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[n_y_dc_max_idx] - n_y_ac;    // subracting linear DC compoenents from raw
 236:Core/algorithm/algorithm.c ****             n_x_ac= (an_x[an_exact_ir_valley_locs[k+1]] - an_x[an_exact_ir_valley_locs[k] ] )*(n_x_
 237:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[an_exact_ir_valley_locs[k]] + n_x_ac/ (an_exact_ir_valley_locs[k+1] - an_
 238:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[n_y_dc_max_idx] - n_x_ac;      // subracting linear DC compoenents from r
 239:Core/algorithm/algorithm.c ****             n_nume=( n_y_ac *n_x_dc_max)>>7 ; //prepare X100 to preserve floating value
 240:Core/algorithm/algorithm.c ****             n_denom= ( n_x_ac *n_y_dc_max)>>7;
 241:Core/algorithm/algorithm.c ****             if (n_denom>0  && n_i_ratio_count <5 &&  n_nume != 0)
 242:Core/algorithm/algorithm.c ****             {   
 243:Core/algorithm/algorithm.c ****                 an_ratio[n_i_ratio_count]= (n_nume*20)/n_denom ; //formular is ( n_y_ac *n_x_dc_max
 244:Core/algorithm/algorithm.c ****                 n_i_ratio_count++;
 245:Core/algorithm/algorithm.c ****             }
 246:Core/algorithm/algorithm.c ****         }
 247:Core/algorithm/algorithm.c ****     }
 248:Core/algorithm/algorithm.c **** 
 249:Core/algorithm/algorithm.c ****     maxim_sort_ascend(an_ratio, n_i_ratio_count);
 250:Core/algorithm/algorithm.c ****     n_middle_idx= n_i_ratio_count/2;
 251:Core/algorithm/algorithm.c **** 
 252:Core/algorithm/algorithm.c ****     if (n_middle_idx >1)
 253:Core/algorithm/algorithm.c ****         n_ratio_average =( an_ratio[n_middle_idx-1] +an_ratio[n_middle_idx])/2; // use median
 254:Core/algorithm/algorithm.c ****     else
 255:Core/algorithm/algorithm.c ****         n_ratio_average = an_ratio[n_middle_idx ];
 256:Core/algorithm/algorithm.c **** 
 257:Core/algorithm/algorithm.c ****     if( n_ratio_average>2 && n_ratio_average <184){
 258:Core/algorithm/algorithm.c ****         n_spo2_calc= uch_spo2_table[n_ratio_average] ;
 259:Core/algorithm/algorithm.c ****         *pn_spo2 = n_spo2_calc ;
ARM GAS  /tmp/ccsmnm5j.s 			page 6


 260:Core/algorithm/algorithm.c ****         *pch_spo2_valid  = 1;//  float_SPO2 =  -45.060*n_ratio_average* n_ratio_average/10000 + 30.
 261:Core/algorithm/algorithm.c ****     }
 262:Core/algorithm/algorithm.c ****     else{
 263:Core/algorithm/algorithm.c ****         *pn_spo2 =  -999 ; // do not use SPO2 since signal ratio is out of range
 264:Core/algorithm/algorithm.c ****         *pch_spo2_valid  = 0; 
 265:Core/algorithm/algorithm.c ****     }
 266:Core/algorithm/algorithm.c **** }
 267:Core/algorithm/algorithm.c **** 
 268:Core/algorithm/algorithm.c **** 
 269:Core/algorithm/algorithm.c **** void maxim_find_peaks(int32_t *pn_locs, int32_t *pn_npks, int32_t *pn_x, int32_t n_size, int32_t n_
 270:Core/algorithm/algorithm.c **** /**
 271:Core/algorithm/algorithm.c **** * \brief        Find peaks
 272:Core/algorithm/algorithm.c **** * \par          Details
 273:Core/algorithm/algorithm.c **** *               Find at most MAX_NUM peaks above MIN_HEIGHT separated by at least MIN_DISTANCE
 274:Core/algorithm/algorithm.c **** *
 275:Core/algorithm/algorithm.c **** * \retval       None
 276:Core/algorithm/algorithm.c **** */
 277:Core/algorithm/algorithm.c **** {
 278:Core/algorithm/algorithm.c ****     maxim_peaks_above_min_height( pn_locs, pn_npks, pn_x, n_size, n_min_height );
 279:Core/algorithm/algorithm.c ****     maxim_remove_close_peaks( pn_locs, pn_npks, pn_x, n_min_distance );
 280:Core/algorithm/algorithm.c ****     *pn_npks = min( *pn_npks, n_max_num );
 281:Core/algorithm/algorithm.c **** }
 282:Core/algorithm/algorithm.c **** 
 283:Core/algorithm/algorithm.c **** void maxim_peaks_above_min_height(int32_t *pn_locs, int32_t *pn_npks, int32_t  *pn_x, int32_t n_siz
 284:Core/algorithm/algorithm.c **** /**
 285:Core/algorithm/algorithm.c **** * \brief        Find peaks above n_min_height
 286:Core/algorithm/algorithm.c **** * \par          Details
 287:Core/algorithm/algorithm.c **** *               Find all peaks above MIN_HEIGHT
 288:Core/algorithm/algorithm.c **** *
 289:Core/algorithm/algorithm.c **** * \retval       None
 290:Core/algorithm/algorithm.c **** */
 291:Core/algorithm/algorithm.c **** {
  28              		.loc 1 291 1 view -0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 291 1 is_stmt 0 view .LVU1
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 059E     		ldr	r6, [sp, #20]
 292:Core/algorithm/algorithm.c ****     int32_t i = 1, n_width;
  42              		.loc 1 292 5 is_stmt 1 view .LVU2
  43              	.LVL1:
 293:Core/algorithm/algorithm.c ****     *pn_npks = 0;
  44              		.loc 1 293 5 view .LVU3
  45              		.loc 1 293 14 is_stmt 0 view .LVU4
  46 0004 0024     		movs	r4, #0
  47 0006 0C60     		str	r4, [r1]
 294:Core/algorithm/algorithm.c ****     
 295:Core/algorithm/algorithm.c ****     while (i < n_size-1){
  48              		.loc 1 295 5 is_stmt 1 view .LVU5
ARM GAS  /tmp/ccsmnm5j.s 			page 7


 292:Core/algorithm/algorithm.c ****     *pn_npks = 0;
  49              		.loc 1 292 13 is_stmt 0 view .LVU6
  50 0008 0124     		movs	r4, #1
  51              		.loc 1 295 11 view .LVU7
  52 000a 19E0     		b	.L2
  53              	.LVL2:
  54              	.L6:
 296:Core/algorithm/algorithm.c ****         if (pn_x[i] > n_min_height && pn_x[i] > pn_x[i-1]){            // find left edge of potenti
 297:Core/algorithm/algorithm.c ****             n_width = 1;
 298:Core/algorithm/algorithm.c ****             while (i+n_width < n_size && pn_x[i] == pn_x[i+n_width])    // find flat peaks
 299:Core/algorithm/algorithm.c ****                 n_width++;
  55              		.loc 1 299 17 is_stmt 1 view .LVU8
  56              		.loc 1 299 24 is_stmt 0 view .LVU9
  57 000c 0EF1010E 		add	lr, lr, #1
  58              	.LVL3:
  59              	.L4:
 298:Core/algorithm/algorithm.c ****                 n_width++;
  60              		.loc 1 298 39 is_stmt 1 view .LVU10
 298:Core/algorithm/algorithm.c ****                 n_width++;
  61              		.loc 1 298 21 is_stmt 0 view .LVU11
  62 0010 04EB0E0C 		add	ip, r4, lr
 298:Core/algorithm/algorithm.c ****                 n_width++;
  63              		.loc 1 298 39 view .LVU12
  64 0014 9C45     		cmp	ip, r3
  65 0016 03DA     		bge	.L5
 298:Core/algorithm/algorithm.c ****                 n_width++;
  66              		.loc 1 298 39 discriminator 1 view .LVU13
  67 0018 52F82C70 		ldr	r7, [r2, ip, lsl #2]
  68 001c BD42     		cmp	r5, r7
  69 001e F5D0     		beq	.L6
  70              	.L5:
 300:Core/algorithm/algorithm.c ****             if (pn_x[i] > pn_x[i+n_width] && (*pn_npks) < 15 ){                            // find 
  71              		.loc 1 300 13 is_stmt 1 view .LVU14
  72              		.loc 1 300 16 is_stmt 0 view .LVU15
  73 0020 52F82C70 		ldr	r7, [r2, ip, lsl #2]
  74 0024 BD42     		cmp	r5, r7
  75 0026 1DDD     		ble	.L10
  76              		.loc 1 300 47 discriminator 1 view .LVU16
  77 0028 0D68     		ldr	r5, [r1]
  78              		.loc 1 300 43 discriminator 1 view .LVU17
  79 002a 0E2D     		cmp	r5, #14
  80 002c 1CDC     		bgt	.L11
 301:Core/algorithm/algorithm.c ****                 pn_locs[(*pn_npks)++] = i;        
  81              		.loc 1 301 17 is_stmt 1 view .LVU18
  82              		.loc 1 301 35 is_stmt 0 view .LVU19
  83 002e 6F1C     		adds	r7, r5, #1
  84 0030 0F60     		str	r7, [r1]
  85              		.loc 1 301 39 view .LVU20
  86 0032 40F82540 		str	r4, [r0, r5, lsl #2]
 302:Core/algorithm/algorithm.c ****                 // for flat peaks, peak location is left edge
 303:Core/algorithm/algorithm.c ****                 i += n_width+1;
  87              		.loc 1 303 17 is_stmt 1 view .LVU21
  88              		.loc 1 303 29 is_stmt 0 view .LVU22
  89 0036 0EF1010E 		add	lr, lr, #1
  90              	.LVL4:
  91              		.loc 1 303 19 view .LVU23
  92 003a 7444     		add	r4, r4, lr
ARM GAS  /tmp/ccsmnm5j.s 			page 8


  93              	.LVL5:
  94              		.loc 1 303 19 view .LVU24
  95 003c 00E0     		b	.L2
  96              	.LVL6:
  97              	.L3:
 304:Core/algorithm/algorithm.c ****             }
 305:Core/algorithm/algorithm.c ****             else
 306:Core/algorithm/algorithm.c ****                 i += n_width;
 307:Core/algorithm/algorithm.c ****         }
 308:Core/algorithm/algorithm.c ****         else
 309:Core/algorithm/algorithm.c ****             i++;
  98              		.loc 1 309 13 is_stmt 1 view .LVU25
  99              		.loc 1 309 14 is_stmt 0 view .LVU26
 100 003e 0134     		adds	r4, r4, #1
 101              	.LVL7:
 102              	.L2:
 295:Core/algorithm/algorithm.c ****         if (pn_x[i] > n_min_height && pn_x[i] > pn_x[i-1]){            // find left edge of potenti
 103              		.loc 1 295 14 is_stmt 1 view .LVU27
 295:Core/algorithm/algorithm.c ****         if (pn_x[i] > n_min_height && pn_x[i] > pn_x[i-1]){            // find left edge of potenti
 104              		.loc 1 295 22 is_stmt 0 view .LVU28
 105 0040 5D1E     		subs	r5, r3, #1
 295:Core/algorithm/algorithm.c ****         if (pn_x[i] > n_min_height && pn_x[i] > pn_x[i-1]){            // find left edge of potenti
 106              		.loc 1 295 14 view .LVU29
 107 0042 A542     		cmp	r5, r4
 108 0044 12DD     		ble	.L13
 296:Core/algorithm/algorithm.c ****             n_width = 1;
 109              		.loc 1 296 9 is_stmt 1 view .LVU30
 296:Core/algorithm/algorithm.c ****             n_width = 1;
 110              		.loc 1 296 17 is_stmt 0 view .LVU31
 111 0046 52F82450 		ldr	r5, [r2, r4, lsl #2]
 296:Core/algorithm/algorithm.c ****             n_width = 1;
 112              		.loc 1 296 12 view .LVU32
 113 004a B542     		cmp	r5, r6
 114 004c F7DD     		ble	.L3
 296:Core/algorithm/algorithm.c ****             n_width = 1;
 115              		.loc 1 296 53 discriminator 1 view .LVU33
 116 004e 04F1804C 		add	ip, r4, #1073741824
 117 0052 0CF1FF3C 		add	ip, ip, #-1
 118 0056 52F82C70 		ldr	r7, [r2, ip, lsl #2]
 296:Core/algorithm/algorithm.c ****             n_width = 1;
 119              		.loc 1 296 36 discriminator 1 view .LVU34
 120 005a BD42     		cmp	r5, r7
 121 005c EFDD     		ble	.L3
 297:Core/algorithm/algorithm.c ****             while (i+n_width < n_size && pn_x[i] == pn_x[i+n_width])    // find flat peaks
 122              		.loc 1 297 21 view .LVU35
 123 005e 4FF0010E 		mov	lr, #1
 124 0062 D5E7     		b	.L4
 125              	.LVL8:
 126              	.L10:
 306:Core/algorithm/algorithm.c ****         }
 127              		.loc 1 306 19 view .LVU36
 128 0064 6446     		mov	r4, ip
 129              	.LVL9:
 306:Core/algorithm/algorithm.c ****         }
 130              		.loc 1 306 19 view .LVU37
 131 0066 EBE7     		b	.L2
 132              	.LVL10:
ARM GAS  /tmp/ccsmnm5j.s 			page 9


 133              	.L11:
 306:Core/algorithm/algorithm.c ****         }
 134              		.loc 1 306 19 view .LVU38
 135 0068 6446     		mov	r4, ip
 136              	.LVL11:
 306:Core/algorithm/algorithm.c ****         }
 137              		.loc 1 306 19 view .LVU39
 138 006a E9E7     		b	.L2
 139              	.LVL12:
 140              	.L13:
 310:Core/algorithm/algorithm.c ****     }
 311:Core/algorithm/algorithm.c **** }
 141              		.loc 1 311 1 view .LVU40
 142 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 143              		.loc 1 311 1 view .LVU41
 144              		.cfi_endproc
 145              	.LFE67:
 147              		.section	.text.maxim_sort_ascend,"ax",%progbits
 148              		.align	1
 149              		.global	maxim_sort_ascend
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	maxim_sort_ascend:
 155              	.LVL13:
 156              	.LFB69:
 312:Core/algorithm/algorithm.c **** 
 313:Core/algorithm/algorithm.c **** 
 314:Core/algorithm/algorithm.c **** void maxim_remove_close_peaks(int32_t *pn_locs, int32_t *pn_npks, int32_t *pn_x, int32_t n_min_dist
 315:Core/algorithm/algorithm.c **** /**
 316:Core/algorithm/algorithm.c **** * \brief        Remove peaks
 317:Core/algorithm/algorithm.c **** * \par          Details
 318:Core/algorithm/algorithm.c **** *               Remove peaks separated by less than MIN_DISTANCE
 319:Core/algorithm/algorithm.c **** *
 320:Core/algorithm/algorithm.c **** * \retval       None
 321:Core/algorithm/algorithm.c **** */
 322:Core/algorithm/algorithm.c **** {
 323:Core/algorithm/algorithm.c ****     
 324:Core/algorithm/algorithm.c ****     int32_t i, j, n_old_npks, n_dist;
 325:Core/algorithm/algorithm.c ****     
 326:Core/algorithm/algorithm.c ****     /* Order peaks from large to small */
 327:Core/algorithm/algorithm.c ****     maxim_sort_indices_descend( pn_x, pn_locs, *pn_npks );
 328:Core/algorithm/algorithm.c **** 
 329:Core/algorithm/algorithm.c ****     for ( i = -1; i < *pn_npks; i++ ){
 330:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 331:Core/algorithm/algorithm.c ****         *pn_npks = i+1;
 332:Core/algorithm/algorithm.c ****         for ( j = i+1; j < n_old_npks; j++ ){
 333:Core/algorithm/algorithm.c ****             n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is a
 334:Core/algorithm/algorithm.c ****             if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 335:Core/algorithm/algorithm.c ****                 pn_locs[(*pn_npks)++] = pn_locs[j];
 336:Core/algorithm/algorithm.c ****         }
 337:Core/algorithm/algorithm.c ****     }
 338:Core/algorithm/algorithm.c **** 
 339:Core/algorithm/algorithm.c ****     // Resort indices longo ascending order
 340:Core/algorithm/algorithm.c ****     maxim_sort_ascend( pn_locs, *pn_npks );
 341:Core/algorithm/algorithm.c **** }
 342:Core/algorithm/algorithm.c **** 
ARM GAS  /tmp/ccsmnm5j.s 			page 10


 343:Core/algorithm/algorithm.c **** void maxim_sort_ascend(int32_t *pn_x,int32_t n_size) 
 344:Core/algorithm/algorithm.c **** /**
 345:Core/algorithm/algorithm.c **** * \brief        Sort array
 346:Core/algorithm/algorithm.c **** * \par          Details
 347:Core/algorithm/algorithm.c **** *               Sort array in ascending order (insertion sort algorithm)
 348:Core/algorithm/algorithm.c **** *
 349:Core/algorithm/algorithm.c **** * \retval       None
 350:Core/algorithm/algorithm.c **** */
 351:Core/algorithm/algorithm.c **** {
 157              		.loc 1 351 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		.loc 1 351 1 is_stmt 0 view .LVU43
 162 0000 00B5     		push	{lr}
 163              	.LCFI1:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 14, -4
 166 0002 8E46     		mov	lr, r1
 352:Core/algorithm/algorithm.c ****     int32_t i, j, n_temp;
 167              		.loc 1 352 5 is_stmt 1 view .LVU44
 353:Core/algorithm/algorithm.c ****     for (i = 1; i < n_size; i++) {
 168              		.loc 1 353 5 view .LVU45
 169              	.LVL14:
 170              		.loc 1 353 12 is_stmt 0 view .LVU46
 171 0004 4FF0010C 		mov	ip, #1
 172              		.loc 1 353 5 view .LVU47
 173 0008 0FE0     		b	.L15
 174              	.LVL15:
 175              	.L18:
 354:Core/algorithm/algorithm.c ****         n_temp = pn_x[i];
 355:Core/algorithm/algorithm.c ****         for (j = i; j > 0 && n_temp < pn_x[j-1]; j--)
 356:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 176              		.loc 1 356 13 is_stmt 1 discriminator 4 view .LVU48
 177              		.loc 1 356 21 is_stmt 0 discriminator 4 view .LVU49
 178 000a 40F82320 		str	r2, [r0, r3, lsl #2]
 355:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 179              		.loc 1 355 51 is_stmt 1 discriminator 4 view .LVU50
 180 000e 013B     		subs	r3, r3, #1
 181              	.LVL16:
 182              	.L16:
 355:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 183              		.loc 1 355 27 discriminator 1 view .LVU51
 184 0010 002B     		cmp	r3, #0
 185 0012 06DD     		ble	.L17
 355:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 186              		.loc 1 355 43 is_stmt 0 discriminator 3 view .LVU52
 187 0014 03F18042 		add	r2, r3, #1073741824
 188 0018 013A     		subs	r2, r2, #1
 189 001a 50F82220 		ldr	r2, [r0, r2, lsl #2]
 355:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 190              		.loc 1 355 27 discriminator 3 view .LVU53
 191 001e 8A42     		cmp	r2, r1
 192 0020 F3DC     		bgt	.L18
 193              	.L17:
 357:Core/algorithm/algorithm.c ****         pn_x[j] = n_temp;
 194              		.loc 1 357 9 is_stmt 1 discriminator 2 view .LVU54
ARM GAS  /tmp/ccsmnm5j.s 			page 11


 195              		.loc 1 357 17 is_stmt 0 discriminator 2 view .LVU55
 196 0022 40F82310 		str	r1, [r0, r3, lsl #2]
 353:Core/algorithm/algorithm.c ****         n_temp = pn_x[i];
 197              		.loc 1 353 30 is_stmt 1 discriminator 2 view .LVU56
 198 0026 0CF1010C 		add	ip, ip, #1
 199              	.LVL17:
 200              	.L15:
 353:Core/algorithm/algorithm.c ****         n_temp = pn_x[i];
 201              		.loc 1 353 19 discriminator 1 view .LVU57
 202 002a F445     		cmp	ip, lr
 203 002c 03DA     		bge	.L21
 354:Core/algorithm/algorithm.c ****         for (j = i; j > 0 && n_temp < pn_x[j-1]; j--)
 204              		.loc 1 354 9 view .LVU58
 354:Core/algorithm/algorithm.c ****         for (j = i; j > 0 && n_temp < pn_x[j-1]; j--)
 205              		.loc 1 354 16 is_stmt 0 view .LVU59
 206 002e 50F82C10 		ldr	r1, [r0, ip, lsl #2]
 207              	.LVL18:
 355:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 208              		.loc 1 355 9 is_stmt 1 view .LVU60
 355:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 209              		.loc 1 355 16 is_stmt 0 view .LVU61
 210 0032 6346     		mov	r3, ip
 355:Core/algorithm/algorithm.c ****             pn_x[j] = pn_x[j-1];
 211              		.loc 1 355 9 view .LVU62
 212 0034 ECE7     		b	.L16
 213              	.LVL19:
 214              	.L21:
 358:Core/algorithm/algorithm.c ****     }
 359:Core/algorithm/algorithm.c **** }
 215              		.loc 1 359 1 view .LVU63
 216 0036 5DF804FB 		ldr	pc, [sp], #4
 217              		.cfi_endproc
 218              	.LFE69:
 220              		.section	.text.maxim_sort_indices_descend,"ax",%progbits
 221              		.align	1
 222              		.global	maxim_sort_indices_descend
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	maxim_sort_indices_descend:
 228              	.LVL20:
 229              	.LFB70:
 360:Core/algorithm/algorithm.c **** 
 361:Core/algorithm/algorithm.c **** void maxim_sort_indices_descend(int32_t *pn_x, int32_t *pn_indx, int32_t n_size)
 362:Core/algorithm/algorithm.c **** /**
 363:Core/algorithm/algorithm.c **** * \brief        Sort indices
 364:Core/algorithm/algorithm.c **** * \par          Details
 365:Core/algorithm/algorithm.c **** *               Sort indices according to descending order (insertion sort algorithm)
 366:Core/algorithm/algorithm.c **** *
 367:Core/algorithm/algorithm.c **** * \retval       None
 368:Core/algorithm/algorithm.c **** */ 
 369:Core/algorithm/algorithm.c **** {
 230              		.loc 1 369 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		.loc 1 369 1 is_stmt 0 view .LVU65
ARM GAS  /tmp/ccsmnm5j.s 			page 12


 235 0000 70B5     		push	{r4, r5, r6, lr}
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 16
 238              		.cfi_offset 4, -16
 239              		.cfi_offset 5, -12
 240              		.cfi_offset 6, -8
 241              		.cfi_offset 14, -4
 242 0002 1546     		mov	r5, r2
 370:Core/algorithm/algorithm.c ****     int32_t i, j, n_temp;
 243              		.loc 1 370 5 is_stmt 1 view .LVU66
 371:Core/algorithm/algorithm.c ****     for (i = 1; i < n_size; i++) {
 244              		.loc 1 371 5 view .LVU67
 245              	.LVL21:
 246              		.loc 1 371 12 is_stmt 0 view .LVU68
 247 0004 4FF0010E 		mov	lr, #1
 248              		.loc 1 371 5 view .LVU69
 249 0008 14E0     		b	.L23
 250              	.LVL22:
 251              	.L26:
 372:Core/algorithm/algorithm.c ****         n_temp = pn_indx[i];
 373:Core/algorithm/algorithm.c ****         for (j = i; j > 0 && pn_x[n_temp] > pn_x[pn_indx[j-1]]; j--)
 374:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 252              		.loc 1 374 13 is_stmt 1 discriminator 4 view .LVU70
 253              		.loc 1 374 24 is_stmt 0 discriminator 4 view .LVU71
 254 000a 41F82320 		str	r2, [r1, r3, lsl #2]
 373:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 255              		.loc 1 373 66 is_stmt 1 discriminator 4 view .LVU72
 256 000e 013B     		subs	r3, r3, #1
 257              	.LVL23:
 258              	.L24:
 373:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 259              		.loc 1 373 27 discriminator 1 view .LVU73
 260 0010 002B     		cmp	r3, #0
 261 0012 0BDD     		ble	.L25
 373:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 262              		.loc 1 373 57 is_stmt 0 discriminator 3 view .LVU74
 263 0014 03F1804C 		add	ip, r3, #1073741824
 264 0018 0CF1FF3C 		add	ip, ip, #-1
 265 001c 51F82C20 		ldr	r2, [r1, ip, lsl #2]
 373:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 266              		.loc 1 373 27 discriminator 3 view .LVU75
 267 0020 50F824C0 		ldr	ip, [r0, r4, lsl #2]
 268 0024 50F82260 		ldr	r6, [r0, r2, lsl #2]
 269 0028 B445     		cmp	ip, r6
 270 002a EEDC     		bgt	.L26
 271              	.L25:
 375:Core/algorithm/algorithm.c ****         pn_indx[j] = n_temp;
 272              		.loc 1 375 9 is_stmt 1 discriminator 2 view .LVU76
 273              		.loc 1 375 20 is_stmt 0 discriminator 2 view .LVU77
 274 002c 41F82340 		str	r4, [r1, r3, lsl #2]
 371:Core/algorithm/algorithm.c ****         n_temp = pn_indx[i];
 275              		.loc 1 371 30 is_stmt 1 discriminator 2 view .LVU78
 276 0030 0EF1010E 		add	lr, lr, #1
 277              	.LVL24:
 278              	.L23:
 371:Core/algorithm/algorithm.c ****         n_temp = pn_indx[i];
 279              		.loc 1 371 19 discriminator 1 view .LVU79
ARM GAS  /tmp/ccsmnm5j.s 			page 13


 280 0034 AE45     		cmp	lr, r5
 281 0036 03DA     		bge	.L29
 372:Core/algorithm/algorithm.c ****         for (j = i; j > 0 && pn_x[n_temp] > pn_x[pn_indx[j-1]]; j--)
 282              		.loc 1 372 9 view .LVU80
 372:Core/algorithm/algorithm.c ****         for (j = i; j > 0 && pn_x[n_temp] > pn_x[pn_indx[j-1]]; j--)
 283              		.loc 1 372 16 is_stmt 0 view .LVU81
 284 0038 51F82E40 		ldr	r4, [r1, lr, lsl #2]
 285              	.LVL25:
 373:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 286              		.loc 1 373 9 is_stmt 1 view .LVU82
 373:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 287              		.loc 1 373 16 is_stmt 0 view .LVU83
 288 003c 7346     		mov	r3, lr
 373:Core/algorithm/algorithm.c ****             pn_indx[j] = pn_indx[j-1];
 289              		.loc 1 373 9 view .LVU84
 290 003e E7E7     		b	.L24
 291              	.LVL26:
 292              	.L29:
 376:Core/algorithm/algorithm.c ****     }
 377:Core/algorithm/algorithm.c **** }
 293              		.loc 1 377 1 view .LVU85
 294 0040 70BD     		pop	{r4, r5, r6, pc}
 295              		.loc 1 377 1 view .LVU86
 296              		.cfi_endproc
 297              	.LFE70:
 299              		.section	.text.maxim_remove_close_peaks,"ax",%progbits
 300              		.align	1
 301              		.global	maxim_remove_close_peaks
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 306              	maxim_remove_close_peaks:
 307              	.LVL27:
 308              	.LFB68:
 322:Core/algorithm/algorithm.c ****     
 309              		.loc 1 322 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 322:Core/algorithm/algorithm.c ****     
 313              		.loc 1 322 1 is_stmt 0 view .LVU88
 314 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 315              	.LCFI3:
 316              		.cfi_def_cfa_offset 24
 317              		.cfi_offset 4, -24
 318              		.cfi_offset 5, -20
 319              		.cfi_offset 6, -16
 320              		.cfi_offset 7, -12
 321              		.cfi_offset 8, -8
 322              		.cfi_offset 14, -4
 323 0004 0446     		mov	r4, r0
 324 0006 0D46     		mov	r5, r1
 325 0008 1046     		mov	r0, r2
 326              	.LVL28:
 322:Core/algorithm/algorithm.c ****     
 327              		.loc 1 322 1 view .LVU89
 328 000a 1E46     		mov	r6, r3
ARM GAS  /tmp/ccsmnm5j.s 			page 14


 324:Core/algorithm/algorithm.c ****     
 329              		.loc 1 324 5 is_stmt 1 view .LVU90
 327:Core/algorithm/algorithm.c **** 
 330              		.loc 1 327 5 view .LVU91
 331 000c 0A68     		ldr	r2, [r1]
 332              	.LVL29:
 327:Core/algorithm/algorithm.c **** 
 333              		.loc 1 327 5 is_stmt 0 view .LVU92
 334 000e 2146     		mov	r1, r4
 335              	.LVL30:
 327:Core/algorithm/algorithm.c **** 
 336              		.loc 1 327 5 view .LVU93
 337 0010 FFF7FEFF 		bl	maxim_sort_indices_descend
 338              	.LVL31:
 329:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 339              		.loc 1 329 5 is_stmt 1 view .LVU94
 329:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 340              		.loc 1 329 13 is_stmt 0 view .LVU95
 341 0014 4FF0FF30 		mov	r0, #-1
 329:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 342              		.loc 1 329 5 view .LVU96
 343 0018 1DE0     		b	.L31
 344              	.LVL32:
 345              	.L38:
 333:Core/algorithm/algorithm.c ****             if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 346              		.loc 1 333 51 view .LVU97
 347 001a 0746     		mov	r7, r0
 348 001c 12E0     		b	.L33
 349              	.LVL33:
 350              	.L34:
 335:Core/algorithm/algorithm.c ****         }
 351              		.loc 1 335 17 is_stmt 1 view .LVU98
 335:Core/algorithm/algorithm.c ****         }
 352              		.loc 1 335 26 is_stmt 0 view .LVU99
 353 001e 2B68     		ldr	r3, [r5]
 335:Core/algorithm/algorithm.c ****         }
 354              		.loc 1 335 35 view .LVU100
 355 0020 5F1C     		adds	r7, r3, #1
 356 0022 2F60     		str	r7, [r5]
 335:Core/algorithm/algorithm.c ****         }
 357              		.loc 1 335 48 view .LVU101
 358 0024 54F80E70 		ldr	r7, [r4, lr]
 335:Core/algorithm/algorithm.c ****         }
 359              		.loc 1 335 39 view .LVU102
 360 0028 44F82370 		str	r7, [r4, r3, lsl #2]
 361              	.L35:
 332:Core/algorithm/algorithm.c ****             n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is a
 362              		.loc 1 332 41 is_stmt 1 discriminator 2 view .LVU103
 363 002c 0132     		adds	r2, r2, #1
 364              	.LVL34:
 365              	.L32:
 332:Core/algorithm/algorithm.c ****             n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is a
 366              		.loc 1 332 26 discriminator 1 view .LVU104
 367 002e 9142     		cmp	r1, r2
 368 0030 10DD     		ble	.L40
 333:Core/algorithm/algorithm.c ****             if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 369              		.loc 1 333 13 view .LVU105
ARM GAS  /tmp/ccsmnm5j.s 			page 15


 333:Core/algorithm/algorithm.c ****             if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 370              		.loc 1 333 30 is_stmt 0 view .LVU106
 371 0032 4FEA820E 		lsl	lr, r2, #2
 372 0036 54F82230 		ldr	r3, [r4, r2, lsl #2]
 333:Core/algorithm/algorithm.c ****             if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 373              		.loc 1 333 51 view .LVU107
 374 003a B0F1FF3F 		cmp	r0, #-1
 375 003e ECD0     		beq	.L38
 333:Core/algorithm/algorithm.c ****             if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 376              		.loc 1 333 51 discriminator 1 view .LVU108
 377 0040 54F82070 		ldr	r7, [r4, r0, lsl #2]
 378              	.L33:
 333:Core/algorithm/algorithm.c ****             if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 379              		.loc 1 333 20 discriminator 4 view .LVU109
 380 0044 A3EB070C 		sub	ip, r3, r7
 381              	.LVL35:
 334:Core/algorithm/algorithm.c ****                 pn_locs[(*pn_npks)++] = pn_locs[j];
 382              		.loc 1 334 13 is_stmt 1 discriminator 4 view .LVU110
 334:Core/algorithm/algorithm.c ****                 pn_locs[(*pn_npks)++] = pn_locs[j];
 383              		.loc 1 334 16 is_stmt 0 discriminator 4 view .LVU111
 384 0048 B445     		cmp	ip, r6
 385 004a E8DC     		bgt	.L34
 334:Core/algorithm/algorithm.c ****                 pn_locs[(*pn_npks)++] = pn_locs[j];
 386              		.loc 1 334 54 discriminator 1 view .LVU112
 387 004c 7342     		rsbs	r3, r6, #0
 334:Core/algorithm/algorithm.c ****                 pn_locs[(*pn_npks)++] = pn_locs[j];
 388              		.loc 1 334 42 discriminator 1 view .LVU113
 389 004e 6345     		cmp	r3, ip
 390 0050 ECDD     		ble	.L35
 391 0052 E4E7     		b	.L34
 392              	.LVL36:
 393              	.L40:
 329:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 394              		.loc 1 329 34 view .LVU114
 395 0054 4046     		mov	r0, r8
 396              	.LVL37:
 397              	.L31:
 329:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 398              		.loc 1 329 21 is_stmt 1 discriminator 1 view .LVU115
 329:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 399              		.loc 1 329 23 is_stmt 0 discriminator 1 view .LVU116
 400 0056 2968     		ldr	r1, [r5]
 329:Core/algorithm/algorithm.c ****         n_old_npks = *pn_npks;
 401              		.loc 1 329 21 discriminator 1 view .LVU117
 402 0058 8142     		cmp	r1, r0
 403 005a 05DD     		ble	.L41
 330:Core/algorithm/algorithm.c ****         *pn_npks = i+1;
 404              		.loc 1 330 9 is_stmt 1 view .LVU118
 405              	.LVL38:
 331:Core/algorithm/algorithm.c ****         for ( j = i+1; j < n_old_npks; j++ ){
 406              		.loc 1 331 9 view .LVU119
 331:Core/algorithm/algorithm.c ****         for ( j = i+1; j < n_old_npks; j++ ){
 407              		.loc 1 331 21 is_stmt 0 view .LVU120
 408 005c 00F10108 		add	r8, r0, #1
 331:Core/algorithm/algorithm.c ****         for ( j = i+1; j < n_old_npks; j++ ){
 409              		.loc 1 331 18 view .LVU121
 410 0060 C5F80080 		str	r8, [r5]
ARM GAS  /tmp/ccsmnm5j.s 			page 16


 332:Core/algorithm/algorithm.c ****             n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is a
 411              		.loc 1 332 9 is_stmt 1 view .LVU122
 412              	.LVL39:
 332:Core/algorithm/algorithm.c ****             n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is a
 413              		.loc 1 332 17 is_stmt 0 view .LVU123
 414 0064 4246     		mov	r2, r8
 332:Core/algorithm/algorithm.c ****             n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is a
 415              		.loc 1 332 9 view .LVU124
 416 0066 E2E7     		b	.L32
 417              	.LVL40:
 418              	.L41:
 340:Core/algorithm/algorithm.c **** }
 419              		.loc 1 340 5 is_stmt 1 view .LVU125
 420 0068 2046     		mov	r0, r4
 421              	.LVL41:
 340:Core/algorithm/algorithm.c **** }
 422              		.loc 1 340 5 is_stmt 0 view .LVU126
 423 006a FFF7FEFF 		bl	maxim_sort_ascend
 424              	.LVL42:
 341:Core/algorithm/algorithm.c **** 
 425              		.loc 1 341 1 view .LVU127
 426 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 341:Core/algorithm/algorithm.c **** 
 427              		.loc 1 341 1 view .LVU128
 428              		.cfi_endproc
 429              	.LFE68:
 431              		.section	.text.maxim_find_peaks,"ax",%progbits
 432              		.align	1
 433              		.global	maxim_find_peaks
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	maxim_find_peaks:
 439              	.LVL43:
 440              	.LFB66:
 277:Core/algorithm/algorithm.c ****     maxim_peaks_above_min_height( pn_locs, pn_npks, pn_x, n_size, n_min_height );
 441              		.loc 1 277 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 12, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Core/algorithm/algorithm.c ****     maxim_peaks_above_min_height( pn_locs, pn_npks, pn_x, n_size, n_min_height );
 445              		.loc 1 277 1 is_stmt 0 view .LVU130
 446 0000 70B5     		push	{r4, r5, r6, lr}
 447              	.LCFI4:
 448              		.cfi_def_cfa_offset 16
 449              		.cfi_offset 4, -16
 450              		.cfi_offset 5, -12
 451              		.cfi_offset 6, -8
 452              		.cfi_offset 14, -4
 453 0002 82B0     		sub	sp, sp, #8
 454              	.LCFI5:
 455              		.cfi_def_cfa_offset 24
 456 0004 0546     		mov	r5, r0
 457 0006 0C46     		mov	r4, r1
 458 0008 1646     		mov	r6, r2
 278:Core/algorithm/algorithm.c ****     maxim_remove_close_peaks( pn_locs, pn_npks, pn_x, n_min_distance );
 459              		.loc 1 278 5 is_stmt 1 view .LVU131
ARM GAS  /tmp/ccsmnm5j.s 			page 17


 460 000a DDF818C0 		ldr	ip, [sp, #24]
 461 000e CDF800C0 		str	ip, [sp]
 462 0012 FFF7FEFF 		bl	maxim_peaks_above_min_height
 463              	.LVL44:
 279:Core/algorithm/algorithm.c ****     *pn_npks = min( *pn_npks, n_max_num );
 464              		.loc 1 279 5 view .LVU132
 465 0016 079B     		ldr	r3, [sp, #28]
 466 0018 3246     		mov	r2, r6
 467 001a 2146     		mov	r1, r4
 468 001c 2846     		mov	r0, r5
 469 001e FFF7FEFF 		bl	maxim_remove_close_peaks
 470              	.LVL45:
 280:Core/algorithm/algorithm.c **** }
 471              		.loc 1 280 5 view .LVU133
 280:Core/algorithm/algorithm.c **** }
 472              		.loc 1 280 16 is_stmt 0 view .LVU134
 473 0022 2368     		ldr	r3, [r4]
 474 0024 089A     		ldr	r2, [sp, #32]
 475 0026 9342     		cmp	r3, r2
 476 0028 A8BF     		it	ge
 477 002a 1346     		movge	r3, r2
 280:Core/algorithm/algorithm.c **** }
 478              		.loc 1 280 14 view .LVU135
 479 002c 2360     		str	r3, [r4]
 281:Core/algorithm/algorithm.c **** 
 480              		.loc 1 281 1 view .LVU136
 481 002e 02B0     		add	sp, sp, #8
 482              	.LCFI6:
 483              		.cfi_def_cfa_offset 16
 484              		@ sp needed
 485 0030 70BD     		pop	{r4, r5, r6, pc}
 281:Core/algorithm/algorithm.c **** 
 486              		.loc 1 281 1 view .LVU137
 487              		.cfi_endproc
 488              	.LFE66:
 490              		.section	.text.maxim_heart_rate_and_oxygen_saturation,"ax",%progbits
 491              		.align	1
 492              		.global	maxim_heart_rate_and_oxygen_saturation
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	maxim_heart_rate_and_oxygen_saturation:
 498              	.LVL46:
 499              	.LFB65:
  96:Core/algorithm/algorithm.c ****     uint32_t un_ir_mean ,un_only_once ;
 500              		.loc 1 96 1 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 12, pretend = 0, frame = 216
 503              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Core/algorithm/algorithm.c ****     uint32_t un_ir_mean ,un_only_once ;
 504              		.loc 1 96 1 is_stmt 0 view .LVU139
 505 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 506              	.LCFI7:
 507              		.cfi_def_cfa_offset 36
 508              		.cfi_offset 4, -36
 509              		.cfi_offset 5, -32
 510              		.cfi_offset 6, -28
ARM GAS  /tmp/ccsmnm5j.s 			page 18


 511              		.cfi_offset 7, -24
 512              		.cfi_offset 8, -20
 513              		.cfi_offset 9, -16
 514              		.cfi_offset 10, -12
 515              		.cfi_offset 11, -8
 516              		.cfi_offset 14, -4
 517 0004 BBB0     		sub	sp, sp, #236
 518              	.LCFI8:
 519              		.cfi_def_cfa_offset 272
 520 0006 8046     		mov	r8, r0
 521 0008 0C46     		mov	r4, r1
 522 000a 9146     		mov	r9, r2
 523 000c 1E46     		mov	r6, r3
 524 000e 449F     		ldr	r7, [sp, #272]
 525 0010 DDF818B1 		ldr	fp, [sp, #280]
  97:Core/algorithm/algorithm.c ****     int32_t k ,n_i_ratio_count;
 526              		.loc 1 97 5 is_stmt 1 view .LVU140
  98:Core/algorithm/algorithm.c ****     int32_t i, s, m, n_exact_ir_valley_locs_count ,n_middle_idx;
 527              		.loc 1 98 5 view .LVU141
  99:Core/algorithm/algorithm.c ****     int32_t n_th1, n_npks,n_c_min;      
 528              		.loc 1 99 5 view .LVU142
 100:Core/algorithm/algorithm.c ****     int32_t an_ir_valley_locs[15] ;
 529              		.loc 1 100 5 view .LVU143
 101:Core/algorithm/algorithm.c ****     int32_t an_exact_ir_valley_locs[15] ;
 530              		.loc 1 101 5 view .LVU144
 102:Core/algorithm/algorithm.c ****     int32_t an_dx_peak_locs[15] ;
 531              		.loc 1 102 5 view .LVU145
 103:Core/algorithm/algorithm.c ****     int32_t n_peak_interval_sum;
 532              		.loc 1 103 5 view .LVU146
 104:Core/algorithm/algorithm.c ****     
 533              		.loc 1 104 5 view .LVU147
 106:Core/algorithm/algorithm.c ****     int32_t n_spo2_calc; 
 534              		.loc 1 106 5 view .LVU148
 107:Core/algorithm/algorithm.c ****     int32_t n_y_dc_max, n_x_dc_max; 
 535              		.loc 1 107 5 view .LVU149
 108:Core/algorithm/algorithm.c ****     int32_t n_y_dc_max_idx, n_x_dc_max_idx; 
 536              		.loc 1 108 5 view .LVU150
 109:Core/algorithm/algorithm.c ****     int32_t an_ratio[5],n_ratio_average; 
 537              		.loc 1 109 5 view .LVU151
 110:Core/algorithm/algorithm.c ****     int32_t n_nume,  n_denom ;
 538              		.loc 1 110 5 view .LVU152
 111:Core/algorithm/algorithm.c ****     // remove DC of ir signal    
 539              		.loc 1 111 5 view .LVU153
 113:Core/algorithm/algorithm.c ****     for (k=0 ; k<n_ir_buffer_length ; k++ ) un_ir_mean += pun_ir_buffer[k] ;
 540              		.loc 1 113 5 view .LVU154
 541              	.LVL47:
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 542              		.loc 1 114 5 view .LVU155
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 543              		.loc 1 114 11 is_stmt 0 view .LVU156
 544 0014 0023     		movs	r3, #0
 545              	.LVL48:
 113:Core/algorithm/algorithm.c ****     for (k=0 ; k<n_ir_buffer_length ; k++ ) un_ir_mean += pun_ir_buffer[k] ;
 546              		.loc 1 113 16 view .LVU157
 547 0016 1A46     		mov	r2, r3
 548              	.LVL49:
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
ARM GAS  /tmp/ccsmnm5j.s 			page 19


 549              		.loc 1 114 5 view .LVU158
 550 0018 03E0     		b	.L45
 551              	.LVL50:
 552              	.L46:
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 553              		.loc 1 114 45 is_stmt 1 discriminator 3 view .LVU159
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 554              		.loc 1 114 72 is_stmt 0 discriminator 3 view .LVU160
 555 001a 58F82310 		ldr	r1, [r8, r3, lsl #2]
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 556              		.loc 1 114 56 discriminator 3 view .LVU161
 557 001e 0A44     		add	r2, r2, r1
 558              	.LVL51:
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 559              		.loc 1 114 40 is_stmt 1 discriminator 3 view .LVU162
 560 0020 0133     		adds	r3, r3, #1
 561              	.LVL52:
 562              	.L45:
 114:Core/algorithm/algorithm.c ****     un_ir_mean =un_ir_mean/n_ir_buffer_length ;
 563              		.loc 1 114 17 discriminator 1 view .LVU163
 564 0022 A342     		cmp	r3, r4
 565 0024 F9DB     		blt	.L46
 115:Core/algorithm/algorithm.c ****     for (k=0 ; k<n_ir_buffer_length ; k++ )  an_x[k] =  pun_ir_buffer[k] - un_ir_mean ; 
 566              		.loc 1 115 5 view .LVU164
 115:Core/algorithm/algorithm.c ****     for (k=0 ; k<n_ir_buffer_length ; k++ )  an_x[k] =  pun_ir_buffer[k] - un_ir_mean ; 
 567              		.loc 1 115 16 is_stmt 0 view .LVU165
 568 0026 B2FBF4F1 		udiv	r1, r2, r4
 569              	.LVL53:
 116:Core/algorithm/algorithm.c ****     
 570              		.loc 1 116 5 is_stmt 1 view .LVU166
 116:Core/algorithm/algorithm.c ****     
 571              		.loc 1 116 11 is_stmt 0 view .LVU167
 572 002a 0023     		movs	r3, #0
 116:Core/algorithm/algorithm.c ****     
 573              		.loc 1 116 5 view .LVU168
 574 002c 06E0     		b	.L47
 575              	.LVL54:
 576              	.L48:
 116:Core/algorithm/algorithm.c ****     
 577              		.loc 1 116 46 is_stmt 1 discriminator 3 view .LVU169
 116:Core/algorithm/algorithm.c ****     
 578              		.loc 1 116 70 is_stmt 0 discriminator 3 view .LVU170
 579 002e 58F82320 		ldr	r2, [r8, r3, lsl #2]
 116:Core/algorithm/algorithm.c ****     
 580              		.loc 1 116 74 discriminator 3 view .LVU171
 581 0032 521A     		subs	r2, r2, r1
 116:Core/algorithm/algorithm.c ****     
 582              		.loc 1 116 54 discriminator 3 view .LVU172
 583 0034 B748     		ldr	r0, .L123
 584 0036 40F82320 		str	r2, [r0, r3, lsl #2]
 116:Core/algorithm/algorithm.c ****     
 585              		.loc 1 116 40 is_stmt 1 discriminator 3 view .LVU173
 586 003a 0133     		adds	r3, r3, #1
 587              	.LVL55:
 588              	.L47:
 116:Core/algorithm/algorithm.c ****     
 589              		.loc 1 116 17 discriminator 1 view .LVU174
ARM GAS  /tmp/ccsmnm5j.s 			page 20


 590 003c A342     		cmp	r3, r4
 591 003e F6DB     		blt	.L48
 119:Core/algorithm/algorithm.c ****         n_denom= ( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3]);
 592              		.loc 1 119 10 is_stmt 0 view .LVU175
 593 0040 0022     		movs	r2, #0
 594 0042 A446     		mov	ip, r4
 595 0044 04E0     		b	.L49
 596              	.LVL56:
 597              	.L50:
 121:Core/algorithm/algorithm.c ****     }
 598              		.loc 1 121 26 discriminator 3 view .LVU176
 599 0046 9B10     		asrs	r3, r3, #2
 121:Core/algorithm/algorithm.c ****     }
 600              		.loc 1 121 16 discriminator 3 view .LVU177
 601 0048 B248     		ldr	r0, .L123
 602              	.LVL57:
 121:Core/algorithm/algorithm.c ****     }
 603              		.loc 1 121 16 discriminator 3 view .LVU178
 604 004a 40F82230 		str	r3, [r0, r2, lsl #2]
 605              	.LVL58:
 119:Core/algorithm/algorithm.c ****         n_denom= ( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3]);
 606              		.loc 1 119 40 is_stmt 1 discriminator 3 view .LVU179
 119:Core/algorithm/algorithm.c ****         n_denom= ( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3]);
 607              		.loc 1 119 40 is_stmt 0 discriminator 3 view .LVU180
 608 004e 0A46     		mov	r2, r1
 609              	.LVL59:
 610              	.L49:
 119:Core/algorithm/algorithm.c ****         n_denom= ( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3]);
 611              		.loc 1 119 15 is_stmt 1 discriminator 1 view .LVU181
 612 0050 B2F5F87F 		cmp	r2, #496
 613 0054 11DA     		bge	.L107
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 614              		.loc 1 120 9 discriminator 3 view .LVU182
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 615              		.loc 1 120 24 is_stmt 0 discriminator 3 view .LVU183
 616 0056 AF4C     		ldr	r4, .L123
 617 0058 54F82230 		ldr	r3, [r4, r2, lsl #2]
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 618              		.loc 1 120 34 discriminator 3 view .LVU184
 619 005c 511C     		adds	r1, r2, #1
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 620              		.loc 1 120 32 discriminator 3 view .LVU185
 621 005e 54F82100 		ldr	r0, [r4, r1, lsl #2]
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 622              		.loc 1 120 27 discriminator 3 view .LVU186
 623 0062 0344     		add	r3, r3, r0
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 624              		.loc 1 120 45 discriminator 3 view .LVU187
 625 0064 901C     		adds	r0, r2, #2
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 626              		.loc 1 120 43 discriminator 3 view .LVU188
 627 0066 54F82000 		ldr	r0, [r4, r0, lsl #2]
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 628              		.loc 1 120 37 discriminator 3 view .LVU189
 629 006a 0344     		add	r3, r3, r0
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 630              		.loc 1 120 56 discriminator 3 view .LVU190
ARM GAS  /tmp/ccsmnm5j.s 			page 21


 631 006c D01C     		adds	r0, r2, #3
 120:Core/algorithm/algorithm.c ****         an_x[k]=  n_denom/(int32_t)4; 
 632              		.loc 1 120 54 discriminator 3 view .LVU191
 633 006e 54F82000 		ldr	r0, [r4, r0, lsl #2]
 634              	.LVL60:
 121:Core/algorithm/algorithm.c ****     }
 635              		.loc 1 121 9 is_stmt 1 discriminator 3 view .LVU192
 121:Core/algorithm/algorithm.c ****     }
 636              		.loc 1 121 26 is_stmt 0 discriminator 3 view .LVU193
 637 0072 1B18     		adds	r3, r3, r0
 638              	.LVL61:
 121:Core/algorithm/algorithm.c ****     }
 639              		.loc 1 121 26 discriminator 3 view .LVU194
 640 0074 E7D5     		bpl	.L50
 641 0076 0333     		adds	r3, r3, #3
 642              	.LVL62:
 121:Core/algorithm/algorithm.c ****     }
 643              		.loc 1 121 26 discriminator 3 view .LVU195
 644 0078 E5E7     		b	.L50
 645              	.LVL63:
 646              	.L107:
 126:Core/algorithm/algorithm.c ****         an_dx[k]= (an_x[k+1]- an_x[k]);
 647              		.loc 1 126 11 view .LVU196
 648 007a 6446     		mov	r4, ip
 649 007c 0023     		movs	r3, #0
 650              	.LVL64:
 651              	.L52:
 126:Core/algorithm/algorithm.c ****         an_dx[k]= (an_x[k+1]- an_x[k]);
 652              		.loc 1 126 16 is_stmt 1 discriminator 1 view .LVU197
 653 007e B3F5F77F 		cmp	r3, #494
 654 0082 0BDC     		bgt	.L108
 127:Core/algorithm/algorithm.c **** 
 655              		.loc 1 127 9 discriminator 3 view .LVU198
 127:Core/algorithm/algorithm.c **** 
 656              		.loc 1 127 26 is_stmt 0 discriminator 3 view .LVU199
 657 0084 591C     		adds	r1, r3, #1
 127:Core/algorithm/algorithm.c **** 
 658              		.loc 1 127 24 discriminator 3 view .LVU200
 659 0086 A348     		ldr	r0, .L123
 660 0088 50F82120 		ldr	r2, [r0, r1, lsl #2]
 127:Core/algorithm/algorithm.c **** 
 661              		.loc 1 127 35 discriminator 3 view .LVU201
 662 008c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 127:Core/algorithm/algorithm.c **** 
 663              		.loc 1 127 29 discriminator 3 view .LVU202
 664 0090 121A     		subs	r2, r2, r0
 127:Core/algorithm/algorithm.c **** 
 665              		.loc 1 127 17 discriminator 3 view .LVU203
 666 0092 A148     		ldr	r0, .L123+4
 667 0094 40F82320 		str	r2, [r0, r3, lsl #2]
 126:Core/algorithm/algorithm.c ****         an_dx[k]= (an_x[k+1]- an_x[k]);
 668              		.loc 1 126 43 is_stmt 1 discriminator 3 view .LVU204
 669              	.LVL65:
 126:Core/algorithm/algorithm.c ****         an_dx[k]= (an_x[k+1]- an_x[k]);
 670              		.loc 1 126 43 is_stmt 0 discriminator 3 view .LVU205
 671 0098 0B46     		mov	r3, r1
 672 009a F0E7     		b	.L52
ARM GAS  /tmp/ccsmnm5j.s 			page 22


 673              	.LVL66:
 674              	.L108:
 130:Core/algorithm/algorithm.c ****         an_dx[k] =  ( an_dx[k]+an_dx[k+1])/2 ;
 675              		.loc 1 130 10 view .LVU206
 676 009c 0022     		movs	r2, #0
 677              	.LVL67:
 678              	.L54:
 130:Core/algorithm/algorithm.c ****         an_dx[k] =  ( an_dx[k]+an_dx[k+1])/2 ;
 679              		.loc 1 130 15 is_stmt 1 discriminator 1 view .LVU207
 680 009e B2F5F77F 		cmp	r2, #494
 681 00a2 0DDA     		bge	.L109
 131:Core/algorithm/algorithm.c ****     }
 682              		.loc 1 131 9 discriminator 3 view .LVU208
 131:Core/algorithm/algorithm.c ****     }
 683              		.loc 1 131 28 is_stmt 0 discriminator 3 view .LVU209
 684 00a4 9C49     		ldr	r1, .L123+4
 685 00a6 51F82230 		ldr	r3, [r1, r2, lsl #2]
 131:Core/algorithm/algorithm.c ****     }
 686              		.loc 1 131 39 discriminator 3 view .LVU210
 687 00aa 501C     		adds	r0, r2, #1
 131:Core/algorithm/algorithm.c ****     }
 688              		.loc 1 131 31 discriminator 3 view .LVU211
 689 00ac 51F820C0 		ldr	ip, [r1, r0, lsl #2]
 690 00b0 6344     		add	r3, r3, ip
 131:Core/algorithm/algorithm.c ****     }
 691              		.loc 1 131 43 discriminator 3 view .LVU212
 692 00b2 03EBD373 		add	r3, r3, r3, lsr #31
 693 00b6 5B10     		asrs	r3, r3, #1
 131:Core/algorithm/algorithm.c ****     }
 694              		.loc 1 131 18 discriminator 3 view .LVU213
 695 00b8 41F82230 		str	r3, [r1, r2, lsl #2]
 130:Core/algorithm/algorithm.c ****         an_dx[k] =  ( an_dx[k]+an_dx[k+1])/2 ;
 696              		.loc 1 130 42 is_stmt 1 discriminator 3 view .LVU214
 697              	.LVL68:
 130:Core/algorithm/algorithm.c ****         an_dx[k] =  ( an_dx[k]+an_dx[k+1])/2 ;
 698              		.loc 1 130 42 is_stmt 0 discriminator 3 view .LVU215
 699 00bc 0246     		mov	r2, r0
 700 00be EEE7     		b	.L54
 701              	.LVL69:
 702              	.L109:
 136:Core/algorithm/algorithm.c ****         s= 0;
 703              		.loc 1 136 12 view .LVU216
 704 00c0 0021     		movs	r1, #0
 705 00c2 18E0     		b	.L56
 706              	.LVL70:
 707              	.L57:
 139:Core/algorithm/algorithm.c ****                      }
 708              		.loc 1 139 13 is_stmt 1 discriminator 3 view .LVU217
 139:Core/algorithm/algorithm.c ****                      }
 709              		.loc 1 139 23 is_stmt 0 discriminator 3 view .LVU218
 710 00c4 9448     		ldr	r0, .L123+4
 711 00c6 50F82300 		ldr	r0, [r0, r3, lsl #2]
 139:Core/algorithm/algorithm.c ****                      }
 712              		.loc 1 139 38 discriminator 3 view .LVU219
 713 00ca A3EB010E 		sub	lr, r3, r1
 139:Core/algorithm/algorithm.c ****                      }
 714              		.loc 1 139 36 discriminator 3 view .LVU220
ARM GAS  /tmp/ccsmnm5j.s 			page 23


 715 00ce DFF84CC2 		ldr	ip, .L123+8
 716 00d2 3CF81EC0 		ldrh	ip, [ip, lr, lsl #1]
 139:Core/algorithm/algorithm.c ****                      }
 717              		.loc 1 139 15 discriminator 3 view .LVU221
 718 00d6 0CFB1022 		mls	r2, ip, r0, r2
 719              	.LVL71:
 138:Core/algorithm/algorithm.c ****             s -= an_dx[k] *auw_hamm[k-i] ; 
 720              		.loc 1 138 39 is_stmt 1 discriminator 3 view .LVU222
 721 00da 0133     		adds	r3, r3, #1
 722              	.LVL72:
 723              	.L58:
 138:Core/algorithm/algorithm.c ****             s -= an_dx[k] *auw_hamm[k-i] ; 
 724              		.loc 1 138 20 discriminator 1 view .LVU223
 725 00dc 081D     		adds	r0, r1, #4
 726 00de 9842     		cmp	r0, r3
 727 00e0 F0DA     		bge	.L57
 141:Core/algorithm/algorithm.c ****     }
 728              		.loc 1 141 9 discriminator 2 view .LVU224
 141:Core/algorithm/algorithm.c ****     }
 729              		.loc 1 141 20 is_stmt 0 discriminator 2 view .LVU225
 730 00e2 8F4B     		ldr	r3, .L123+12
 731              	.LVL73:
 141:Core/algorithm/algorithm.c ****     }
 732              		.loc 1 141 20 discriminator 2 view .LVU226
 733 00e4 83FB0203 		smull	r0, r3, r3, r2
 734 00e8 D217     		asrs	r2, r2, #31
 735              	.LVL74:
 141:Core/algorithm/algorithm.c ****     }
 736              		.loc 1 141 20 discriminator 2 view .LVU227
 737 00ea C2EB6322 		rsb	r2, r2, r3, asr #9
 141:Core/algorithm/algorithm.c ****     }
 738              		.loc 1 141 17 discriminator 2 view .LVU228
 739 00ee 8A4B     		ldr	r3, .L123+4
 740 00f0 43F82120 		str	r2, [r3, r1, lsl #2]
 136:Core/algorithm/algorithm.c ****         s= 0;
 741              		.loc 1 136 57 is_stmt 1 discriminator 2 view .LVU229
 742 00f4 0131     		adds	r1, r1, #1
 743              	.LVL75:
 744              	.L56:
 136:Core/algorithm/algorithm.c ****         s= 0;
 745              		.loc 1 136 18 discriminator 1 view .LVU230
 746 00f6 B1F5F47F 		cmp	r1, #488
 747 00fa 02DC     		bgt	.L110
 138:Core/algorithm/algorithm.c ****             s -= an_dx[k] *auw_hamm[k-i] ; 
 748              		.loc 1 138 15 is_stmt 0 view .LVU231
 749 00fc 0B46     		mov	r3, r1
 137:Core/algorithm/algorithm.c ****         for( k=i; k<i+ HAMMING_SIZE ;k++){
 750              		.loc 1 137 10 view .LVU232
 751 00fe 0022     		movs	r2, #0
 752 0100 ECE7     		b	.L58
 753              	.L110:
 145:Core/algorithm/algorithm.c ****     for ( k=0 ; k<BUFFER_SIZE-HAMMING_SIZE ;k++){
 754              		.loc 1 145 10 view .LVU233
 755 0102 0021     		movs	r1, #0
 756              	.LVL76:
 146:Core/algorithm/algorithm.c ****         n_th1 += ((an_dx[k]>0)? an_dx[k] : ((int32_t)0-an_dx[k])) ;
 757              		.loc 1 146 12 view .LVU234
ARM GAS  /tmp/ccsmnm5j.s 			page 24


 758 0104 0B46     		mov	r3, r1
 759              	.L59:
 760              	.LVL77:
 146:Core/algorithm/algorithm.c ****         n_th1 += ((an_dx[k]>0)? an_dx[k] : ((int32_t)0-an_dx[k])) ;
 761              		.loc 1 146 18 is_stmt 1 discriminator 1 view .LVU235
 762 0106 B3F5F77F 		cmp	r3, #494
 763 010a 08DC     		bgt	.L111
 147:Core/algorithm/algorithm.c ****     }
 764              		.loc 1 147 9 discriminator 3 view .LVU236
 147:Core/algorithm/algorithm.c ****     }
 765              		.loc 1 147 25 is_stmt 0 discriminator 3 view .LVU237
 766 010c 824A     		ldr	r2, .L123+4
 767 010e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 147:Core/algorithm/algorithm.c ****     }
 768              		.loc 1 147 42 discriminator 3 view .LVU238
 769 0112 002A     		cmp	r2, #0
 770 0114 B8BF     		it	lt
 771 0116 5242     		rsblt	r2, r2, #0
 147:Core/algorithm/algorithm.c ****     }
 772              		.loc 1 147 15 discriminator 3 view .LVU239
 773 0118 1144     		add	r1, r1, r2
 774              	.LVL78:
 146:Core/algorithm/algorithm.c ****         n_th1 += ((an_dx[k]>0)? an_dx[k] : ((int32_t)0-an_dx[k])) ;
 775              		.loc 1 146 46 is_stmt 1 discriminator 3 view .LVU240
 776 011a 0133     		adds	r3, r3, #1
 777              	.LVL79:
 146:Core/algorithm/algorithm.c ****         n_th1 += ((an_dx[k]>0)? an_dx[k] : ((int32_t)0-an_dx[k])) ;
 778              		.loc 1 146 46 is_stmt 0 discriminator 3 view .LVU241
 779 011c F3E7     		b	.L59
 780              	.L111:
 149:Core/algorithm/algorithm.c ****     // peak location is acutally index for sharpest location of raw signal since we flipped the sig
 781              		.loc 1 149 5 is_stmt 1 view .LVU242
 149:Core/algorithm/algorithm.c ****     // peak location is acutally index for sharpest location of raw signal since we flipped the sig
 782              		.loc 1 149 10 is_stmt 0 view .LVU243
 783 011e 814A     		ldr	r2, .L123+16
 784 0120 82FB0132 		smull	r3, r2, r2, r1
 785              	.LVL80:
 149:Core/algorithm/algorithm.c ****     // peak location is acutally index for sharpest location of raw signal since we flipped the sig
 786              		.loc 1 149 10 view .LVU244
 787 0124 CB17     		asrs	r3, r1, #31
 788 0126 C3EBA213 		rsb	r3, r3, r2, asr #6
 789              	.LVL81:
 151:Core/algorithm/algorithm.c **** 
 790              		.loc 1 151 5 is_stmt 1 view .LVU245
 791 012a 0522     		movs	r2, #5
 792 012c 0292     		str	r2, [sp, #8]
 793 012e 0822     		movs	r2, #8
 794 0130 0192     		str	r2, [sp, #4]
 795 0132 0093     		str	r3, [sp]
 796 0134 40F2EF13 		movw	r3, #495
 797              	.LVL82:
 151:Core/algorithm/algorithm.c **** 
 798              		.loc 1 151 5 is_stmt 0 view .LVU246
 799 0138 774A     		ldr	r2, .L123+4
 800 013a 39A9     		add	r1, sp, #228
 801 013c 0CA8     		add	r0, sp, #48
 802 013e FFF7FEFF 		bl	maxim_find_peaks
ARM GAS  /tmp/ccsmnm5j.s 			page 25


 803              	.LVL83:
 153:Core/algorithm/algorithm.c ****     if (n_npks>=2){
 804              		.loc 1 153 5 is_stmt 1 view .LVU247
 154:Core/algorithm/algorithm.c ****         for (k=1; k<n_npks; k++)
 805              		.loc 1 154 5 view .LVU248
 154:Core/algorithm/algorithm.c ****         for (k=1; k<n_npks; k++)
 806              		.loc 1 154 15 is_stmt 0 view .LVU249
 807 0142 DDF8E4C0 		ldr	ip, [sp, #228]
 154:Core/algorithm/algorithm.c ****         for (k=1; k<n_npks; k++)
 808              		.loc 1 154 8 view .LVU250
 809 0146 BCF1010F 		cmp	ip, #1
 810 014a 22DD     		ble	.L112
 153:Core/algorithm/algorithm.c ****     if (n_npks>=2){
 811              		.loc 1 153 25 view .LVU251
 812 014c 0020     		movs	r0, #0
 155:Core/algorithm/algorithm.c ****             n_peak_interval_sum += (an_dx_peak_locs[k]-an_dx_peak_locs[k -1]);
 813              		.loc 1 155 15 view .LVU252
 814 014e 0123     		movs	r3, #1
 815              	.LVL84:
 816              	.L61:
 155:Core/algorithm/algorithm.c ****             n_peak_interval_sum += (an_dx_peak_locs[k]-an_dx_peak_locs[k -1]);
 817              		.loc 1 155 20 is_stmt 1 discriminator 1 view .LVU253
 818 0150 9C45     		cmp	ip, r3
 819 0152 0FDD     		ble	.L113
 156:Core/algorithm/algorithm.c ****         n_peak_interval_sum=n_peak_interval_sum/(n_npks-1);
 820              		.loc 1 156 13 discriminator 3 view .LVU254
 156:Core/algorithm/algorithm.c ****         n_peak_interval_sum=n_peak_interval_sum/(n_npks-1);
 821              		.loc 1 156 52 is_stmt 0 discriminator 3 view .LVU255
 822 0154 3AAA     		add	r2, sp, #232
 823 0156 02EB8302 		add	r2, r2, r3, lsl #2
 824 015a 52F8B82C 		ldr	r2, [r2, #-184]
 156:Core/algorithm/algorithm.c ****         n_peak_interval_sum=n_peak_interval_sum/(n_npks-1);
 825              		.loc 1 156 74 discriminator 3 view .LVU256
 826 015e 591E     		subs	r1, r3, #1
 156:Core/algorithm/algorithm.c ****         n_peak_interval_sum=n_peak_interval_sum/(n_npks-1);
 827              		.loc 1 156 71 discriminator 3 view .LVU257
 828 0160 0DF1E80E 		add	lr, sp, #232
 829 0164 0EEB8101 		add	r1, lr, r1, lsl #2
 830 0168 51F8B81C 		ldr	r1, [r1, #-184]
 156:Core/algorithm/algorithm.c ****         n_peak_interval_sum=n_peak_interval_sum/(n_npks-1);
 831              		.loc 1 156 55 discriminator 3 view .LVU258
 832 016c 521A     		subs	r2, r2, r1
 156:Core/algorithm/algorithm.c ****         n_peak_interval_sum=n_peak_interval_sum/(n_npks-1);
 833              		.loc 1 156 33 discriminator 3 view .LVU259
 834 016e 1044     		add	r0, r0, r2
 835              	.LVL85:
 155:Core/algorithm/algorithm.c ****             n_peak_interval_sum += (an_dx_peak_locs[k]-an_dx_peak_locs[k -1]);
 836              		.loc 1 155 30 is_stmt 1 discriminator 3 view .LVU260
 837 0170 0133     		adds	r3, r3, #1
 838              	.LVL86:
 155:Core/algorithm/algorithm.c ****             n_peak_interval_sum += (an_dx_peak_locs[k]-an_dx_peak_locs[k -1]);
 839              		.loc 1 155 30 is_stmt 0 discriminator 3 view .LVU261
 840 0172 EDE7     		b	.L61
 841              	.L113:
 157:Core/algorithm/algorithm.c ****         *pn_heart_rate=(int32_t)(6000/n_peak_interval_sum);// beats per minutes
 842              		.loc 1 157 9 is_stmt 1 view .LVU262
 157:Core/algorithm/algorithm.c ****         *pn_heart_rate=(int32_t)(6000/n_peak_interval_sum);// beats per minutes
ARM GAS  /tmp/ccsmnm5j.s 			page 26


 843              		.loc 1 157 56 is_stmt 0 view .LVU263
 844 0174 0CF1FF3C 		add	ip, ip, #-1
 157:Core/algorithm/algorithm.c ****         *pn_heart_rate=(int32_t)(6000/n_peak_interval_sum);// beats per minutes
 845              		.loc 1 157 28 view .LVU264
 846 0178 90FBFCF0 		sdiv	r0, r0, ip
 847              	.LVL87:
 158:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 1;
 848              		.loc 1 158 9 is_stmt 1 view .LVU265
 158:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 1;
 849              		.loc 1 158 24 is_stmt 0 view .LVU266
 850 017c 41F27073 		movw	r3, #6000
 851              	.LVL88:
 158:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 1;
 852              		.loc 1 158 24 view .LVU267
 853 0180 93FBF0F3 		sdiv	r3, r3, r0
 158:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 1;
 854              		.loc 1 158 23 view .LVU268
 855 0184 459A     		ldr	r2, [sp, #276]
 856 0186 1360     		str	r3, [r2]
 159:Core/algorithm/algorithm.c ****     }
 857              		.loc 1 159 9 is_stmt 1 view .LVU269
 159:Core/algorithm/algorithm.c ****     }
 858              		.loc 1 159 24 is_stmt 0 view .LVU270
 859 0188 0123     		movs	r3, #1
 860 018a 8BF80030 		strb	r3, [fp]
 861              	.LVL89:
 862              	.L65:
 155:Core/algorithm/algorithm.c ****             n_peak_interval_sum += (an_dx_peak_locs[k]-an_dx_peak_locs[k -1]);
 863              		.loc 1 155 15 discriminator 1 view .LVU271
 864 018e 0023     		movs	r3, #0
 865 0190 0FE0     		b	.L64
 866              	.LVL90:
 867              	.L112:
 162:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 0;
 868              		.loc 1 162 9 is_stmt 1 view .LVU272
 162:Core/algorithm/algorithm.c ****         *pch_hr_valid  = 0;
 869              		.loc 1 162 24 is_stmt 0 view .LVU273
 870 0192 654B     		ldr	r3, .L123+20
 871 0194 459A     		ldr	r2, [sp, #276]
 872 0196 1360     		str	r3, [r2]
 163:Core/algorithm/algorithm.c ****     }
 873              		.loc 1 163 9 is_stmt 1 view .LVU274
 163:Core/algorithm/algorithm.c ****     }
 874              		.loc 1 163 24 is_stmt 0 view .LVU275
 875 0198 0023     		movs	r3, #0
 876 019a 8BF80030 		strb	r3, [fp]
 877 019e F6E7     		b	.L65
 878              	.LVL91:
 879              	.L66:
 167:Core/algorithm/algorithm.c **** 
 880              		.loc 1 167 9 is_stmt 1 discriminator 3 view .LVU276
 167:Core/algorithm/algorithm.c **** 
 881              		.loc 1 167 45 is_stmt 0 discriminator 3 view .LVU277
 882 01a0 3AAA     		add	r2, sp, #232
 883 01a2 02EB8301 		add	r1, r2, r3, lsl #2
 884 01a6 51F8B82C 		ldr	r2, [r1, #-184]
 167:Core/algorithm/algorithm.c **** 
ARM GAS  /tmp/ccsmnm5j.s 			page 27


 885              		.loc 1 167 48 discriminator 3 view .LVU278
 886 01aa 0232     		adds	r2, r2, #2
 167:Core/algorithm/algorithm.c **** 
 887              		.loc 1 167 29 discriminator 3 view .LVU279
 888 01ac 41F8402C 		str	r2, [r1, #-64]
 166:Core/algorithm/algorithm.c ****         an_ir_valley_locs[k]=an_dx_peak_locs[k]+HAMMING_SIZE/2; 
 889              		.loc 1 166 28 is_stmt 1 discriminator 3 view .LVU280
 890 01b0 0133     		adds	r3, r3, #1
 891              	.LVL92:
 892              	.L64:
 166:Core/algorithm/algorithm.c ****         an_ir_valley_locs[k]=an_dx_peak_locs[k]+HAMMING_SIZE/2; 
 893              		.loc 1 166 18 discriminator 1 view .LVU281
 894 01b2 399A     		ldr	r2, [sp, #228]
 895 01b4 9A42     		cmp	r2, r3
 896 01b6 F3DC     		bgt	.L66
 172:Core/algorithm/algorithm.c ****         an_x[k] =  pun_ir_buffer[k] ; 
 897              		.loc 1 172 11 is_stmt 0 view .LVU282
 898 01b8 9446     		mov	ip, r2
 899 01ba 0023     		movs	r3, #0
 900              	.LVL93:
 172:Core/algorithm/algorithm.c ****         an_x[k] =  pun_ir_buffer[k] ; 
 901              		.loc 1 172 11 view .LVU283
 902 01bc 0AE0     		b	.L67
 903              	.LVL94:
 904              	.L68:
 173:Core/algorithm/algorithm.c ****         an_y[k] =  pun_red_buffer[k] ; 
 905              		.loc 1 173 9 is_stmt 1 discriminator 3 view .LVU284
 173:Core/algorithm/algorithm.c ****         an_y[k] =  pun_red_buffer[k] ; 
 906              		.loc 1 173 33 is_stmt 0 discriminator 3 view .LVU285
 907 01be 58F82310 		ldr	r1, [r8, r3, lsl #2]
 173:Core/algorithm/algorithm.c ****         an_y[k] =  pun_red_buffer[k] ; 
 908              		.loc 1 173 17 discriminator 3 view .LVU286
 909 01c2 544A     		ldr	r2, .L123
 910 01c4 42F82310 		str	r1, [r2, r3, lsl #2]
 174:Core/algorithm/algorithm.c ****     }
 911              		.loc 1 174 9 is_stmt 1 discriminator 3 view .LVU287
 174:Core/algorithm/algorithm.c ****     }
 912              		.loc 1 174 34 is_stmt 0 discriminator 3 view .LVU288
 913 01c8 59F82310 		ldr	r1, [r9, r3, lsl #2]
 174:Core/algorithm/algorithm.c ****     }
 914              		.loc 1 174 17 discriminator 3 view .LVU289
 915 01cc 574A     		ldr	r2, .L123+24
 916 01ce 42F82310 		str	r1, [r2, r3, lsl #2]
 172:Core/algorithm/algorithm.c ****         an_x[k] =  pun_ir_buffer[k] ; 
 917              		.loc 1 172 40 is_stmt 1 discriminator 3 view .LVU290
 918 01d2 0133     		adds	r3, r3, #1
 919              	.LVL95:
 920              	.L67:
 172:Core/algorithm/algorithm.c ****         an_x[k] =  pun_ir_buffer[k] ; 
 921              		.loc 1 172 17 discriminator 1 view .LVU291
 922 01d4 A342     		cmp	r3, r4
 923 01d6 F2DB     		blt	.L68
 178:Core/algorithm/algorithm.c ****     for(k=0 ; k<n_npks ;k++){
 924              		.loc 1 178 34 is_stmt 0 view .LVU292
 925 01d8 0020     		movs	r0, #0
 179:Core/algorithm/algorithm.c ****         un_only_once =1;
 926              		.loc 1 179 10 view .LVU293
ARM GAS  /tmp/ccsmnm5j.s 			page 28


 927 01da 0146     		mov	r1, r0
 928 01dc 8046     		mov	r8, r0
 929              	.LVL96:
 179:Core/algorithm/algorithm.c ****         un_only_once =1;
 930              		.loc 1 179 10 view .LVU294
 931 01de 17E0     		b	.L69
 932              	.LVL97:
 933              	.L73:
 189:Core/algorithm/algorithm.c ****                    an_exact_ir_valley_locs[k]=i;
 934              		.loc 1 189 20 is_stmt 1 view .LVU295
 190:Core/algorithm/algorithm.c ****                 }
 935              		.loc 1 190 20 view .LVU296
 190:Core/algorithm/algorithm.c ****                 }
 936              		.loc 1 190 46 is_stmt 0 view .LVU297
 937 01e0 0DF1E80E 		add	lr, sp, #232
 938 01e4 0EEB810E 		add	lr, lr, r1, lsl #2
 939 01e8 4EF87C3C 		str	r3, [lr, #-124]
 189:Core/algorithm/algorithm.c ****                    an_exact_ir_valley_locs[k]=i;
 940              		.loc 1 189 27 view .LVU298
 941 01ec 9646     		mov	lr, r2
 942              	.LVL98:
 943              	.L72:
 184:Core/algorithm/algorithm.c ****                 if (an_x[i]<n_c_min){
 944              		.loc 1 184 32 is_stmt 1 discriminator 2 view .LVU299
 945 01ee 0133     		adds	r3, r3, #1
 946              	.LVL99:
 947              	.L71:
 184:Core/algorithm/algorithm.c ****                 if (an_x[i]<n_c_min){
 948              		.loc 1 184 25 discriminator 1 view .LVU300
 949 01f0 221D     		adds	r2, r4, #4
 950 01f2 9A42     		cmp	r2, r3
 951 01f4 08DB     		blt	.L114
 185:Core/algorithm/algorithm.c ****                     if (un_only_once >0){
 952              		.loc 1 185 17 view .LVU301
 185:Core/algorithm/algorithm.c ****                     if (un_only_once >0){
 953              		.loc 1 185 25 is_stmt 0 view .LVU302
 954 01f6 474A     		ldr	r2, .L123
 955 01f8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 185:Core/algorithm/algorithm.c ****                     if (un_only_once >0){
 956              		.loc 1 185 20 view .LVU303
 957 01fc 7245     		cmp	r2, lr
 958 01fe F6DA     		bge	.L72
 186:Core/algorithm/algorithm.c ****                        un_only_once =0;
 959              		.loc 1 186 21 is_stmt 1 view .LVU304
 186:Core/algorithm/algorithm.c ****                        un_only_once =0;
 960              		.loc 1 186 24 is_stmt 0 view .LVU305
 961 0200 0028     		cmp	r0, #0
 962 0202 EDD0     		beq	.L73
 187:Core/algorithm/algorithm.c ****                    } 
 963              		.loc 1 187 37 view .LVU306
 964 0204 0020     		movs	r0, #0
 965              	.LVL100:
 187:Core/algorithm/algorithm.c ****                    } 
 966              		.loc 1 187 37 view .LVU307
 967 0206 EBE7     		b	.L73
 968              	.LVL101:
 969              	.L114:
ARM GAS  /tmp/ccsmnm5j.s 			page 29


 192:Core/algorithm/algorithm.c ****                 n_exact_ir_valley_locs_count ++ ;
 970              		.loc 1 192 13 is_stmt 1 view .LVU308
 192:Core/algorithm/algorithm.c ****                 n_exact_ir_valley_locs_count ++ ;
 971              		.loc 1 192 16 is_stmt 0 view .LVU309
 972 0208 08B9     		cbnz	r0, .L70
 193:Core/algorithm/algorithm.c ****         }
 973              		.loc 1 193 17 is_stmt 1 view .LVU310
 193:Core/algorithm/algorithm.c ****         }
 974              		.loc 1 193 46 is_stmt 0 view .LVU311
 975 020a 08F10108 		add	r8, r8, #1
 976              	.LVL102:
 977              	.L70:
 179:Core/algorithm/algorithm.c ****         un_only_once =1;
 978              		.loc 1 179 26 is_stmt 1 discriminator 2 view .LVU312
 979 020e 0131     		adds	r1, r1, #1
 980              	.LVL103:
 981              	.L69:
 179:Core/algorithm/algorithm.c ****         un_only_once =1;
 982              		.loc 1 179 16 discriminator 1 view .LVU313
 983 0210 8C45     		cmp	ip, r1
 984 0212 0DDD     		ble	.L115
 180:Core/algorithm/algorithm.c ****         m=an_ir_valley_locs[k];
 985              		.loc 1 180 9 view .LVU314
 986              	.LVL104:
 181:Core/algorithm/algorithm.c ****         n_c_min= 16777216;//2^24;
 987              		.loc 1 181 9 view .LVU315
 181:Core/algorithm/algorithm.c ****         n_c_min= 16777216;//2^24;
 988              		.loc 1 181 10 is_stmt 0 view .LVU316
 989 0214 3AAB     		add	r3, sp, #232
 990 0216 03EB8103 		add	r3, r3, r1, lsl #2
 991 021a 53F8404C 		ldr	r4, [r3, #-64]
 992              	.LVL105:
 182:Core/algorithm/algorithm.c ****         if (m+5 <  BUFFER_SIZE-HAMMING_SIZE  && m-5 >0){
 993              		.loc 1 182 9 is_stmt 1 view .LVU317
 183:Core/algorithm/algorithm.c ****             for(i= m-5;i<m+5; i++)
 994              		.loc 1 183 9 view .LVU318
 183:Core/algorithm/algorithm.c ****             for(i= m-5;i<m+5; i++)
 995              		.loc 1 183 46 is_stmt 0 view .LVU319
 996 021e A31F     		subs	r3, r4, #6
 183:Core/algorithm/algorithm.c ****             for(i= m-5;i<m+5; i++)
 997              		.loc 1 183 12 view .LVU320
 998 0220 B3F5F27F 		cmp	r3, #484
 999 0224 F3D2     		bcs	.L70
 184:Core/algorithm/algorithm.c ****                 if (an_x[i]<n_c_min){
 1000              		.loc 1 184 13 is_stmt 1 view .LVU321
 184:Core/algorithm/algorithm.c ****                 if (an_x[i]<n_c_min){
 1001              		.loc 1 184 18 is_stmt 0 view .LVU322
 1002 0226 631F     		subs	r3, r4, #5
 1003              	.LVL106:
 182:Core/algorithm/algorithm.c ****         if (m+5 <  BUFFER_SIZE-HAMMING_SIZE  && m-5 >0){
 1004              		.loc 1 182 16 view .LVU323
 1005 0228 4FF0807E 		mov	lr, #16777216
 180:Core/algorithm/algorithm.c ****         m=an_ir_valley_locs[k];
 1006              		.loc 1 180 22 view .LVU324
 1007 022c 0120     		movs	r0, #1
 184:Core/algorithm/algorithm.c ****                 if (an_x[i]<n_c_min){
 1008              		.loc 1 184 13 view .LVU325
ARM GAS  /tmp/ccsmnm5j.s 			page 30


 1009 022e DFE7     		b	.L71
 1010              	.LVL107:
 1011              	.L115:
 196:Core/algorithm/algorithm.c ****        *pn_spo2 =  -999 ; // do not use SPO2 since signal ratio is out of range
 1012              		.loc 1 196 8 view .LVU326
 1013 0230 4046     		mov	r0, r8
 196:Core/algorithm/algorithm.c ****        *pn_spo2 =  -999 ; // do not use SPO2 since signal ratio is out of range
 1014              		.loc 1 196 5 is_stmt 1 view .LVU327
 196:Core/algorithm/algorithm.c ****        *pn_spo2 =  -999 ; // do not use SPO2 since signal ratio is out of range
 1015              		.loc 1 196 8 is_stmt 0 view .LVU328
 1016 0232 0128     		cmp	r0, #1
 1017 0234 01DD     		ble	.L116
 1018              	.LVL108:
 202:Core/algorithm/algorithm.c ****         an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int32_t)4;
 1019              		.loc 1 202 10 view .LVU329
 1020 0236 0022     		movs	r2, #0
 1021 0238 0BE0     		b	.L76
 1022              	.L116:
 197:Core/algorithm/algorithm.c ****        *pch_spo2_valid  = 0; 
 1023              		.loc 1 197 8 is_stmt 1 view .LVU330
 197:Core/algorithm/algorithm.c ****        *pch_spo2_valid  = 0; 
 1024              		.loc 1 197 17 is_stmt 0 view .LVU331
 1025 023a 3B4B     		ldr	r3, .L123+20
 1026 023c 3360     		str	r3, [r6]
 198:Core/algorithm/algorithm.c ****        return;
 1027              		.loc 1 198 8 is_stmt 1 view .LVU332
 198:Core/algorithm/algorithm.c ****        return;
 1028              		.loc 1 198 25 is_stmt 0 view .LVU333
 1029 023e 0023     		movs	r3, #0
 1030 0240 3B70     		strb	r3, [r7]
 199:Core/algorithm/algorithm.c ****     }
 1031              		.loc 1 199 8 is_stmt 1 view .LVU334
 1032 0242 4BE0     		b	.L44
 1033              	.LVL109:
 1034              	.L118:
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1035              		.loc 1 203 59 is_stmt 0 discriminator 3 view .LVU335
 1036 0244 0333     		adds	r3, r3, #3
 1037 0246 19E0     		b	.L78
 1038              	.L79:
 204:Core/algorithm/algorithm.c ****     }
 1039              		.loc 1 204 59 discriminator 3 view .LVU336
 1040 0248 9B10     		asrs	r3, r3, #2
 204:Core/algorithm/algorithm.c ****     }
 1041              		.loc 1 204 16 discriminator 3 view .LVU337
 1042 024a 384C     		ldr	r4, .L123+24
 1043 024c 44F82230 		str	r3, [r4, r2, lsl #2]
 202:Core/algorithm/algorithm.c ****         an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int32_t)4;
 1044              		.loc 1 202 40 is_stmt 1 discriminator 3 view .LVU338
 1045              	.LVL110:
 202:Core/algorithm/algorithm.c ****         an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int32_t)4;
 1046              		.loc 1 202 40 is_stmt 0 discriminator 3 view .LVU339
 1047 0250 0A46     		mov	r2, r1
 1048              	.L76:
 1049              	.LVL111:
 202:Core/algorithm/algorithm.c ****         an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int32_t)4;
 1050              		.loc 1 202 15 is_stmt 1 discriminator 1 view .LVU340
ARM GAS  /tmp/ccsmnm5j.s 			page 31


 1051 0252 B2F5F87F 		cmp	r2, #496
 1052 0256 24DA     		bge	.L117
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1053              		.loc 1 203 9 discriminator 3 view .LVU341
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1054              		.loc 1 203 23 is_stmt 0 discriminator 3 view .LVU342
 1055 0258 2E48     		ldr	r0, .L123
 1056 025a 50F82230 		ldr	r3, [r0, r2, lsl #2]
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1057              		.loc 1 203 33 discriminator 3 view .LVU343
 1058 025e 511C     		adds	r1, r2, #1
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1059              		.loc 1 203 31 discriminator 3 view .LVU344
 1060 0260 50F82140 		ldr	r4, [r0, r1, lsl #2]
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1061              		.loc 1 203 26 discriminator 3 view .LVU345
 1062 0264 2344     		add	r3, r3, r4
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1063              		.loc 1 203 44 discriminator 3 view .LVU346
 1064 0266 02F1020E 		add	lr, r2, #2
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1065              		.loc 1 203 42 discriminator 3 view .LVU347
 1066 026a 50F82E40 		ldr	r4, [r0, lr, lsl #2]
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1067              		.loc 1 203 36 discriminator 3 view .LVU348
 1068 026e 2344     		add	r3, r3, r4
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1069              		.loc 1 203 55 discriminator 3 view .LVU349
 1070 0270 02F1030C 		add	ip, r2, #3
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1071              		.loc 1 203 53 discriminator 3 view .LVU350
 1072 0274 50F82C40 		ldr	r4, [r0, ip, lsl #2]
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1073              		.loc 1 203 59 discriminator 3 view .LVU351
 1074 0278 1B19     		adds	r3, r3, r4
 1075 027a E3D4     		bmi	.L118
 1076              	.L78:
 1077 027c 9B10     		asrs	r3, r3, #2
 203:Core/algorithm/algorithm.c ****         an_y[k]=( an_y[k]+an_y[k+1]+ an_y[k+2]+ an_y[k+3])/(int32_t)4;
 1078              		.loc 1 203 16 discriminator 3 view .LVU352
 1079 027e 254C     		ldr	r4, .L123
 1080 0280 44F82230 		str	r3, [r4, r2, lsl #2]
 204:Core/algorithm/algorithm.c ****     }
 1081              		.loc 1 204 9 is_stmt 1 discriminator 3 view .LVU353
 204:Core/algorithm/algorithm.c ****     }
 1082              		.loc 1 204 23 is_stmt 0 discriminator 3 view .LVU354
 1083 0284 2948     		ldr	r0, .L123+24
 1084 0286 50F82230 		ldr	r3, [r0, r2, lsl #2]
 204:Core/algorithm/algorithm.c ****     }
 1085              		.loc 1 204 31 discriminator 3 view .LVU355
 1086 028a 50F82140 		ldr	r4, [r0, r1, lsl #2]
 204:Core/algorithm/algorithm.c ****     }
 1087              		.loc 1 204 26 discriminator 3 view .LVU356
 1088 028e 2344     		add	r3, r3, r4
 204:Core/algorithm/algorithm.c ****     }
 1089              		.loc 1 204 42 discriminator 3 view .LVU357
 1090 0290 50F82E40 		ldr	r4, [r0, lr, lsl #2]
ARM GAS  /tmp/ccsmnm5j.s 			page 32


 204:Core/algorithm/algorithm.c ****     }
 1091              		.loc 1 204 36 discriminator 3 view .LVU358
 1092 0294 2344     		add	r3, r3, r4
 204:Core/algorithm/algorithm.c ****     }
 1093              		.loc 1 204 53 discriminator 3 view .LVU359
 1094 0296 50F82C40 		ldr	r4, [r0, ip, lsl #2]
 204:Core/algorithm/algorithm.c ****     }
 1095              		.loc 1 204 59 discriminator 3 view .LVU360
 1096 029a 1B19     		adds	r3, r3, r4
 1097 029c D4D5     		bpl	.L79
 1098 029e 0333     		adds	r3, r3, #3
 1099 02a0 D2E7     		b	.L79
 1100              	.L117:
 212:Core/algorithm/algorithm.c ****     for (k=0; k< n_exact_ir_valley_locs_count; k++){
 1101              		.loc 1 212 10 view .LVU361
 1102 02a2 4046     		mov	r0, r8
 1103 02a4 0023     		movs	r3, #0
 1104 02a6 06E0     		b	.L81
 1105              	.LVL112:
 1106              	.L82:
 212:Core/algorithm/algorithm.c ****     for (k=0; k< n_exact_ir_valley_locs_count; k++){
 1107              		.loc 1 212 25 is_stmt 1 discriminator 3 view .LVU362
 212:Core/algorithm/algorithm.c ****     for (k=0; k< n_exact_ir_valley_locs_count; k++){
 1108              		.loc 1 212 36 is_stmt 0 discriminator 3 view .LVU363
 1109 02a8 3AAA     		add	r2, sp, #232
 1110 02aa 02EB8302 		add	r2, r2, r3, lsl #2
 1111 02ae 0021     		movs	r1, #0
 1112 02b0 42F8CC1C 		str	r1, [r2, #-204]
 212:Core/algorithm/algorithm.c ****     for (k=0; k< n_exact_ir_valley_locs_count; k++){
 1113              		.loc 1 212 21 is_stmt 1 discriminator 3 view .LVU364
 1114 02b4 0133     		adds	r3, r3, #1
 1115              	.LVL113:
 1116              	.L81:
 212:Core/algorithm/algorithm.c ****     for (k=0; k< n_exact_ir_valley_locs_count; k++){
 1117              		.loc 1 212 15 discriminator 1 view .LVU365
 1118 02b6 042B     		cmp	r3, #4
 1119 02b8 F6DD     		ble	.L82
 213:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k] > BUFFER_SIZE ){             
 1120              		.loc 1 213 11 is_stmt 0 view .LVU366
 1121 02ba 0023     		movs	r3, #0
 1122              	.LVL114:
 1123              	.L83:
 213:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k] > BUFFER_SIZE ){             
 1124              		.loc 1 213 16 is_stmt 1 discriminator 1 view .LVU367
 1125 02bc 8342     		cmp	r3, r0
 1126 02be 10DA     		bge	.L119
 214:Core/algorithm/algorithm.c ****             *pn_spo2 =  -999 ; // do not use SPO2 since valley loc is out of range
 1127              		.loc 1 214 9 view .LVU368
 214:Core/algorithm/algorithm.c ****             *pn_spo2 =  -999 ; // do not use SPO2 since valley loc is out of range
 1128              		.loc 1 214 36 is_stmt 0 view .LVU369
 1129 02c0 3AAA     		add	r2, sp, #232
 1130 02c2 02EB8302 		add	r2, r2, r3, lsl #2
 1131 02c6 52F87C2C 		ldr	r2, [r2, #-124]
 214:Core/algorithm/algorithm.c ****             *pn_spo2 =  -999 ; // do not use SPO2 since valley loc is out of range
 1132              		.loc 1 214 12 view .LVU370
 1133 02ca B2F5FA7F 		cmp	r2, #500
 1134 02ce 01DC     		bgt	.L120
ARM GAS  /tmp/ccsmnm5j.s 			page 33


 213:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k] > BUFFER_SIZE ){             
 1135              		.loc 1 213 49 is_stmt 1 discriminator 2 view .LVU371
 1136 02d0 0133     		adds	r3, r3, #1
 1137              	.LVL115:
 213:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k] > BUFFER_SIZE ){             
 1138              		.loc 1 213 49 is_stmt 0 discriminator 2 view .LVU372
 1139 02d2 F3E7     		b	.L83
 1140              	.L120:
 215:Core/algorithm/algorithm.c ****             *pch_spo2_valid  = 0; 
 1141              		.loc 1 215 13 is_stmt 1 view .LVU373
 215:Core/algorithm/algorithm.c ****             *pch_spo2_valid  = 0; 
 1142              		.loc 1 215 22 is_stmt 0 view .LVU374
 1143 02d4 144B     		ldr	r3, .L123+20
 1144              	.LVL116:
 215:Core/algorithm/algorithm.c ****             *pch_spo2_valid  = 0; 
 1145              		.loc 1 215 22 view .LVU375
 1146 02d6 3360     		str	r3, [r6]
 216:Core/algorithm/algorithm.c ****             return;
 1147              		.loc 1 216 13 is_stmt 1 view .LVU376
 216:Core/algorithm/algorithm.c ****             return;
 1148              		.loc 1 216 30 is_stmt 0 view .LVU377
 1149 02d8 0023     		movs	r3, #0
 1150 02da 3B70     		strb	r3, [r7]
 217:Core/algorithm/algorithm.c ****         }
 1151              		.loc 1 217 13 is_stmt 1 view .LVU378
 1152              	.LVL117:
 1153              	.L44:
 266:Core/algorithm/algorithm.c **** 
 1154              		.loc 1 266 1 is_stmt 0 view .LVU379
 1155 02dc 3BB0     		add	sp, sp, #236
 1156              	.LCFI9:
 1157              		.cfi_remember_state
 1158              		.cfi_def_cfa_offset 36
 1159              		@ sp needed
 1160 02de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1161              	.LVL118:
 1162              	.L119:
 1163              	.LCFI10:
 1164              		.cfi_restore_state
 210:Core/algorithm/algorithm.c ****     
 1165              		.loc 1 210 21 view .LVU380
 1166 02e2 0024     		movs	r4, #0
 223:Core/algorithm/algorithm.c ****         n_y_dc_max= -16777216 ; 
 1167              		.loc 1 223 11 view .LVU381
 1168 02e4 2346     		mov	r3, r4
 1169              	.LVL119:
 223:Core/algorithm/algorithm.c ****         n_y_dc_max= -16777216 ; 
 1170              		.loc 1 223 11 view .LVU382
 1171 02e6 D146     		mov	r9, r10
 1172              	.LVL120:
 223:Core/algorithm/algorithm.c ****         n_y_dc_max= -16777216 ; 
 1173              		.loc 1 223 11 view .LVU383
 1174 02e8 0596     		str	r6, [sp, #20]
 1175 02ea BA46     		mov	r10, r7
 1176 02ec 5EE0     		b	.L86
 1177              	.LVL121:
 1178              	.L90:
ARM GAS  /tmp/ccsmnm5j.s 			page 34


 227:Core/algorithm/algorithm.c ****                 if (an_x[i]> n_x_dc_max) {n_x_dc_max =an_x[i];n_x_dc_max_idx =i; }
 1179              		.loc 1 227 82 is_stmt 1 discriminator 2 view .LVU384
 1180 02ee 0137     		adds	r7, r7, #1
 1181              	.LVL122:
 1182              	.L87:
 227:Core/algorithm/algorithm.c ****                 if (an_x[i]> n_x_dc_max) {n_x_dc_max =an_x[i];n_x_dc_max_idx =i; }
 1183              		.loc 1 227 49 discriminator 1 view .LVU385
 1184 02f0 BA42     		cmp	r2, r7
 1185 02f2 1DDD     		ble	.L121
 228:Core/algorithm/algorithm.c ****                 if (an_y[i]> n_y_dc_max) {n_y_dc_max =an_y[i];n_y_dc_max_idx=i;}
 1186              		.loc 1 228 17 view .LVU386
 228:Core/algorithm/algorithm.c ****                 if (an_y[i]> n_y_dc_max) {n_y_dc_max =an_y[i];n_y_dc_max_idx=i;}
 1187              		.loc 1 228 25 is_stmt 0 view .LVU387
 1188 02f4 074B     		ldr	r3, .L123
 1189 02f6 53F82730 		ldr	r3, [r3, r7, lsl #2]
 228:Core/algorithm/algorithm.c ****                 if (an_y[i]> n_y_dc_max) {n_y_dc_max =an_y[i];n_y_dc_max_idx=i;}
 1190              		.loc 1 228 20 view .LVU388
 1191 02fa 4345     		cmp	r3, r8
 1192 02fc 01DD     		ble	.L89
 228:Core/algorithm/algorithm.c ****                 if (an_y[i]> n_y_dc_max) {n_y_dc_max =an_y[i];n_y_dc_max_idx=i;}
 1193              		.loc 1 228 78 view .LVU389
 1194 02fe B946     		mov	r9, r7
 1195              	.LVL123:
 228:Core/algorithm/algorithm.c ****                 if (an_y[i]> n_y_dc_max) {n_y_dc_max =an_y[i];n_y_dc_max_idx=i;}
 1196              		.loc 1 228 54 view .LVU390
 1197 0300 9846     		mov	r8, r3
 1198              	.LVL124:
 1199              	.L89:
 229:Core/algorithm/algorithm.c ****             }
 1200              		.loc 1 229 17 is_stmt 1 view .LVU391
 229:Core/algorithm/algorithm.c ****             }
 1201              		.loc 1 229 25 is_stmt 0 view .LVU392
 1202 0302 0A4B     		ldr	r3, .L123+24
 1203 0304 53F82730 		ldr	r3, [r3, r7, lsl #2]
 229:Core/algorithm/algorithm.c ****             }
 1204              		.loc 1 229 20 view .LVU393
 1205 0308 8B42     		cmp	r3, r1
 1206 030a F0DD     		ble	.L90
 229:Core/algorithm/algorithm.c ****             }
 1207              		.loc 1 229 77 view .LVU394
 1208 030c 3D46     		mov	r5, r7
 1209              	.LVL125:
 229:Core/algorithm/algorithm.c ****             }
 1210              		.loc 1 229 54 view .LVU395
 1211 030e 1946     		mov	r1, r3
 1212              	.LVL126:
 229:Core/algorithm/algorithm.c ****             }
 1213              		.loc 1 229 54 view .LVU396
 1214 0310 EDE7     		b	.L90
 1215              	.L124:
 1216 0312 00BF     		.align	2
 1217              	.L123:
 1218 0314 00000000 		.word	an_x
 1219 0318 00000000 		.word	an_dx
 1220 031c 00000000 		.word	auw_hamm
 1221 0320 ED9B5F72 		.word	1918868461
 1222 0324 67571921 		.word	555308903
ARM GAS  /tmp/ccsmnm5j.s 			page 35


 1223 0328 19FCFFFF 		.word	-999
 1224 032c 00000000 		.word	an_y
 1225              	.LVL127:
 1226              	.L121:
 231:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1227              		.loc 1 231 26 view .LVU397
 1228 0330 4346     		mov	r3, r8
 231:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1229              		.loc 1 231 13 is_stmt 1 view .LVU398
 231:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1230              		.loc 1 231 26 is_stmt 0 view .LVU399
 1231 0332 424F     		ldr	r7, .L125
 1232              	.LVL128:
 231:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1233              		.loc 1 231 57 view .LVU400
 1234 0334 57F82280 		ldr	r8, [r7, r2, lsl #2]
 1235              	.LVL129:
 231:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1236              		.loc 1 231 57 view .LVU401
 1237 0338 57F826B0 		ldr	fp, [r7, r6, lsl #2]
 1238 033c A8EB0B08 		sub	r8, r8, fp
 231:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1239              		.loc 1 231 111 view .LVU402
 1240 0340 A5EB060B 		sub	fp, r5, r6
 231:Core/algorithm/algorithm.c ****             n_y_ac=  an_y[an_exact_ir_valley_locs[k]] + n_y_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1241              		.loc 1 231 19 view .LVU403
 1242 0344 0BFB08F8 		mul	r8, fp, r8
 1243              	.LVL130:
 232:Core/algorithm/algorithm.c ****         
 1244              		.loc 1 232 13 is_stmt 1 view .LVU404
 232:Core/algorithm/algorithm.c ****         
 1245              		.loc 1 232 63 is_stmt 0 view .LVU405
 1246 0348 98FBFEF8 		sdiv	r8, r8, lr
 1247              	.LVL131:
 232:Core/algorithm/algorithm.c ****         
 1248              		.loc 1 232 19 view .LVU406
 1249 034c 57F826B0 		ldr	fp, [r7, r6, lsl #2]
 1250              	.LVL132:
 232:Core/algorithm/algorithm.c ****         
 1251              		.loc 1 232 19 view .LVU407
 1252 0350 D844     		add	r8, r8, fp
 1253              	.LVL133:
 235:Core/algorithm/algorithm.c ****             n_x_ac= (an_x[an_exact_ir_valley_locs[k+1]] - an_x[an_exact_ir_valley_locs[k] ] )*(n_x_
 1254              		.loc 1 235 13 is_stmt 1 view .LVU408
 235:Core/algorithm/algorithm.c ****             n_x_ac= (an_x[an_exact_ir_valley_locs[k+1]] - an_x[an_exact_ir_valley_locs[k] ] )*(n_x_
 1255              		.loc 1 235 26 is_stmt 0 view .LVU409
 1256 0352 57F82570 		ldr	r7, [r7, r5, lsl #2]
 235:Core/algorithm/algorithm.c ****             n_x_ac= (an_x[an_exact_ir_valley_locs[k+1]] - an_x[an_exact_ir_valley_locs[k] ] )*(n_x_
 1257              		.loc 1 235 19 view .LVU410
 1258 0356 A7EB080B 		sub	fp, r7, r8
 1259              	.LVL134:
 236:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[an_exact_ir_valley_locs[k]] + n_x_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1260              		.loc 1 236 13 is_stmt 1 view .LVU411
 236:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[an_exact_ir_valley_locs[k]] + n_x_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1261              		.loc 1 236 26 is_stmt 0 view .LVU412
 1262 035a 394F     		ldr	r7, .L125+4
 1263 035c 57F82220 		ldr	r2, [r7, r2, lsl #2]
ARM GAS  /tmp/ccsmnm5j.s 			page 36


 236:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[an_exact_ir_valley_locs[k]] + n_x_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1264              		.loc 1 236 63 view .LVU413
 1265 0360 57F82680 		ldr	r8, [r7, r6, lsl #2]
 236:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[an_exact_ir_valley_locs[k]] + n_x_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1266              		.loc 1 236 57 view .LVU414
 1267 0364 A2EB0802 		sub	r2, r2, r8
 236:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[an_exact_ir_valley_locs[k]] + n_x_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1268              		.loc 1 236 111 view .LVU415
 1269 0368 A9EB0606 		sub	r6, r9, r6
 236:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[an_exact_ir_valley_locs[k]] + n_x_ac/ (an_exact_ir_valley_locs[k+1] - an_
 1270              		.loc 1 236 19 view .LVU416
 1271 036c 06FB02F2 		mul	r2, r6, r2
 1272              	.LVL135:
 237:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[n_y_dc_max_idx] - n_x_ac;      // subracting linear DC compoenents from r
 1273              		.loc 1 237 13 is_stmt 1 view .LVU417
 237:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[n_y_dc_max_idx] - n_x_ac;      // subracting linear DC compoenents from r
 1274              		.loc 1 237 63 is_stmt 0 view .LVU418
 1275 0370 92FBFEF2 		sdiv	r2, r2, lr
 1276              	.LVL136:
 237:Core/algorithm/algorithm.c ****             n_x_ac=  an_x[n_y_dc_max_idx] - n_x_ac;      // subracting linear DC compoenents from r
 1277              		.loc 1 237 19 view .LVU419
 1278 0374 9044     		add	r8, r8, r2
 1279              	.LVL137:
 238:Core/algorithm/algorithm.c ****             n_nume=( n_y_ac *n_x_dc_max)>>7 ; //prepare X100 to preserve floating value
 1280              		.loc 1 238 13 is_stmt 1 view .LVU420
 238:Core/algorithm/algorithm.c ****             n_nume=( n_y_ac *n_x_dc_max)>>7 ; //prepare X100 to preserve floating value
 1281              		.loc 1 238 26 is_stmt 0 view .LVU421
 1282 0376 57F82520 		ldr	r2, [r7, r5, lsl #2]
 238:Core/algorithm/algorithm.c ****             n_nume=( n_y_ac *n_x_dc_max)>>7 ; //prepare X100 to preserve floating value
 1283              		.loc 1 238 19 view .LVU422
 1284 037a A2EB0802 		sub	r2, r2, r8
 1285              	.LVL138:
 239:Core/algorithm/algorithm.c ****             n_denom= ( n_x_ac *n_y_dc_max)>>7;
 1286              		.loc 1 239 13 is_stmt 1 view .LVU423
 239:Core/algorithm/algorithm.c ****             n_denom= ( n_x_ac *n_y_dc_max)>>7;
 1287              		.loc 1 239 29 is_stmt 0 view .LVU424
 1288 037e 0BFB03F3 		mul	r3, fp, r3
 1289              	.LVL139:
 239:Core/algorithm/algorithm.c ****             n_denom= ( n_x_ac *n_y_dc_max)>>7;
 1290              		.loc 1 239 19 view .LVU425
 1291 0382 DB11     		asrs	r3, r3, #7
 1292              	.LVL140:
 240:Core/algorithm/algorithm.c ****             if (n_denom>0  && n_i_ratio_count <5 &&  n_nume != 0)
 1293              		.loc 1 240 13 is_stmt 1 view .LVU426
 240:Core/algorithm/algorithm.c ****             if (n_denom>0  && n_i_ratio_count <5 &&  n_nume != 0)
 1294              		.loc 1 240 31 is_stmt 0 view .LVU427
 1295 0384 01FB02F2 		mul	r2, r1, r2
 1296              	.LVL141:
 240:Core/algorithm/algorithm.c ****             if (n_denom>0  && n_i_ratio_count <5 &&  n_nume != 0)
 1297              		.loc 1 240 20 view .LVU428
 1298 0388 D211     		asrs	r2, r2, #7
 1299              	.LVL142:
 241:Core/algorithm/algorithm.c ****             {   
 1300              		.loc 1 241 13 is_stmt 1 view .LVU429
 241:Core/algorithm/algorithm.c ****             {   
 1301              		.loc 1 241 16 is_stmt 0 view .LVU430
 1302 038a 002A     		cmp	r2, #0
ARM GAS  /tmp/ccsmnm5j.s 			page 37


 1303 038c 0DDD     		ble	.L88
 241:Core/algorithm/algorithm.c ****             {   
 1304              		.loc 1 241 28 discriminator 1 view .LVU431
 1305 038e 042C     		cmp	r4, #4
 1306 0390 0BDC     		bgt	.L88
 241:Core/algorithm/algorithm.c ****             {   
 1307              		.loc 1 241 50 discriminator 2 view .LVU432
 1308 0392 53B1     		cbz	r3, .L88
 243:Core/algorithm/algorithm.c ****                 n_i_ratio_count++;
 1309              		.loc 1 243 17 is_stmt 1 view .LVU433
 243:Core/algorithm/algorithm.c ****                 n_i_ratio_count++;
 1310              		.loc 1 243 51 is_stmt 0 view .LVU434
 1311 0394 03EB8303 		add	r3, r3, r3, lsl #2
 1312              	.LVL143:
 243:Core/algorithm/algorithm.c ****                 n_i_ratio_count++;
 1313              		.loc 1 243 51 view .LVU435
 1314 0398 9B00     		lsls	r3, r3, #2
 243:Core/algorithm/algorithm.c ****                 n_i_ratio_count++;
 1315              		.loc 1 243 55 view .LVU436
 1316 039a 93FBF2F3 		sdiv	r3, r3, r2
 243:Core/algorithm/algorithm.c ****                 n_i_ratio_count++;
 1317              		.loc 1 243 42 view .LVU437
 1318 039e 3AAA     		add	r2, sp, #232
 1319              	.LVL144:
 243:Core/algorithm/algorithm.c ****                 n_i_ratio_count++;
 1320              		.loc 1 243 42 view .LVU438
 1321 03a0 02EB8402 		add	r2, r2, r4, lsl #2
 1322 03a4 42F8CC3C 		str	r3, [r2, #-204]
 244:Core/algorithm/algorithm.c ****             }
 1323              		.loc 1 244 17 is_stmt 1 view .LVU439
 244:Core/algorithm/algorithm.c ****             }
 1324              		.loc 1 244 32 is_stmt 0 view .LVU440
 1325 03a8 0134     		adds	r4, r4, #1
 1326              	.LVL145:
 1327              	.L88:
 224:Core/algorithm/algorithm.c ****         n_x_dc_max= - 16777216; 
 1328              		.loc 1 224 19 discriminator 1 view .LVU441
 1329 03aa 6346     		mov	r3, ip
 1330              	.LVL146:
 1331              	.L86:
 223:Core/algorithm/algorithm.c ****         n_y_dc_max= -16777216 ; 
 1332              		.loc 1 223 16 is_stmt 1 discriminator 1 view .LVU442
 223:Core/algorithm/algorithm.c ****         n_y_dc_max= -16777216 ; 
 1333              		.loc 1 223 46 is_stmt 0 discriminator 1 view .LVU443
 1334 03ac 421E     		subs	r2, r0, #1
 223:Core/algorithm/algorithm.c ****         n_y_dc_max= -16777216 ; 
 1335              		.loc 1 223 16 discriminator 1 view .LVU444
 1336 03ae 9A42     		cmp	r2, r3
 1337 03b0 16DD     		ble	.L122
 224:Core/algorithm/algorithm.c ****         n_x_dc_max= - 16777216; 
 1338              		.loc 1 224 9 is_stmt 1 view .LVU445
 1339              	.LVL147:
 225:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k+1]-an_exact_ir_valley_locs[k] >10){
 1340              		.loc 1 225 9 view .LVU446
 226:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
 1341              		.loc 1 226 9 view .LVU447
 226:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
ARM GAS  /tmp/ccsmnm5j.s 			page 38


 1342              		.loc 1 226 38 is_stmt 0 view .LVU448
 1343 03b2 03F1010C 		add	ip, r3, #1
 226:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
 1344              		.loc 1 226 36 view .LVU449
 1345 03b6 3AAA     		add	r2, sp, #232
 1346 03b8 02EB8C02 		add	r2, r2, ip, lsl #2
 1347 03bc 52F87C2C 		ldr	r2, [r2, #-124]
 226:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
 1348              		.loc 1 226 65 view .LVU450
 1349 03c0 3AA9     		add	r1, sp, #232
 1350 03c2 01EB8303 		add	r3, r1, r3, lsl #2
 1351              	.LVL148:
 226:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
 1352              		.loc 1 226 65 view .LVU451
 1353 03c6 53F87C6C 		ldr	r6, [r3, #-124]
 226:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
 1354              		.loc 1 226 41 view .LVU452
 1355 03ca A2EB060E 		sub	lr, r2, r6
 226:Core/algorithm/algorithm.c ****             for (i=an_exact_ir_valley_locs[k]; i< an_exact_ir_valley_locs[k+1]; i++){
 1356              		.loc 1 226 12 view .LVU453
 1357 03ce BEF10A0F 		cmp	lr, #10
 1358 03d2 EADD     		ble	.L88
 227:Core/algorithm/algorithm.c ****                 if (an_x[i]> n_x_dc_max) {n_x_dc_max =an_x[i];n_x_dc_max_idx =i; }
 1359              		.loc 1 227 19 view .LVU454
 1360 03d4 3746     		mov	r7, r6
 225:Core/algorithm/algorithm.c ****         if (an_exact_ir_valley_locs[k+1]-an_exact_ir_valley_locs[k] >10){
 1361              		.loc 1 225 19 view .LVU455
 1362 03d6 4FF07F43 		mov	r3, #-16777216
 224:Core/algorithm/algorithm.c ****         n_x_dc_max= - 16777216; 
 1363              		.loc 1 224 19 view .LVU456
 1364 03da 1946     		mov	r1, r3
 1365 03dc 9846     		mov	r8, r3
 1366 03de 87E7     		b	.L87
 1367              	.LVL149:
 1368              	.L122:
 249:Core/algorithm/algorithm.c ****     n_middle_idx= n_i_ratio_count/2;
 1369              		.loc 1 249 5 view .LVU457
 1370 03e0 059E     		ldr	r6, [sp, #20]
 1371 03e2 5746     		mov	r7, r10
 249:Core/algorithm/algorithm.c ****     n_middle_idx= n_i_ratio_count/2;
 1372              		.loc 1 249 5 is_stmt 1 view .LVU458
 1373 03e4 2146     		mov	r1, r4
 1374 03e6 07A8     		add	r0, sp, #28
 1375              	.LVL150:
 249:Core/algorithm/algorithm.c ****     n_middle_idx= n_i_ratio_count/2;
 1376              		.loc 1 249 5 is_stmt 0 view .LVU459
 1377 03e8 FFF7FEFF 		bl	maxim_sort_ascend
 1378              	.LVL151:
 250:Core/algorithm/algorithm.c **** 
 1379              		.loc 1 250 5 is_stmt 1 view .LVU460
 250:Core/algorithm/algorithm.c **** 
 1380              		.loc 1 250 17 is_stmt 0 view .LVU461
 1381 03ec 04EBD472 		add	r2, r4, r4, lsr #31
 1382 03f0 5210     		asrs	r2, r2, #1
 1383              	.LVL152:
 252:Core/algorithm/algorithm.c ****         n_ratio_average =( an_ratio[n_middle_idx-1] +an_ratio[n_middle_idx])/2; // use median
 1384              		.loc 1 252 5 is_stmt 1 view .LVU462
ARM GAS  /tmp/ccsmnm5j.s 			page 39


 252:Core/algorithm/algorithm.c ****         n_ratio_average =( an_ratio[n_middle_idx-1] +an_ratio[n_middle_idx])/2; // use median
 1385              		.loc 1 252 8 is_stmt 0 view .LVU463
 1386 03f2 032C     		cmp	r4, #3
 1387 03f4 16DD     		ble	.L93
 253:Core/algorithm/algorithm.c ****     else
 1388              		.loc 1 253 9 is_stmt 1 view .LVU464
 253:Core/algorithm/algorithm.c ****     else
 1389              		.loc 1 253 49 is_stmt 0 view .LVU465
 1390 03f6 531E     		subs	r3, r2, #1
 253:Core/algorithm/algorithm.c ****     else
 1391              		.loc 1 253 36 view .LVU466
 1392 03f8 3AA9     		add	r1, sp, #232
 1393 03fa 01EB8303 		add	r3, r1, r3, lsl #2
 1394 03fe 53F8CC3C 		ldr	r3, [r3, #-204]
 253:Core/algorithm/algorithm.c ****     else
 1395              		.loc 1 253 62 view .LVU467
 1396 0402 01EB8202 		add	r2, r1, r2, lsl #2
 1397              	.LVL153:
 253:Core/algorithm/algorithm.c ****     else
 1398              		.loc 1 253 62 view .LVU468
 1399 0406 52F8CC2C 		ldr	r2, [r2, #-204]
 253:Core/algorithm/algorithm.c ****     else
 1400              		.loc 1 253 53 view .LVU469
 1401 040a 1344     		add	r3, r3, r2
 253:Core/algorithm/algorithm.c ****     else
 1402              		.loc 1 253 25 view .LVU470
 1403 040c 03EBD373 		add	r3, r3, r3, lsr #31
 1404 0410 5B10     		asrs	r3, r3, #1
 1405              	.LVL154:
 1406              	.L94:
 257:Core/algorithm/algorithm.c ****         n_spo2_calc= uch_spo2_table[n_ratio_average] ;
 1407              		.loc 1 257 5 is_stmt 1 view .LVU471
 257:Core/algorithm/algorithm.c ****         n_spo2_calc= uch_spo2_table[n_ratio_average] ;
 1408              		.loc 1 257 27 is_stmt 0 view .LVU472
 1409 0412 DA1E     		subs	r2, r3, #3
 257:Core/algorithm/algorithm.c ****         n_spo2_calc= uch_spo2_table[n_ratio_average] ;
 1410              		.loc 1 257 7 view .LVU473
 1411 0414 B42A     		cmp	r2, #180
 1412 0416 0BD8     		bhi	.L95
 258:Core/algorithm/algorithm.c ****         *pn_spo2 = n_spo2_calc ;
 1413              		.loc 1 258 9 is_stmt 1 view .LVU474
 258:Core/algorithm/algorithm.c ****         *pn_spo2 = n_spo2_calc ;
 1414              		.loc 1 258 36 is_stmt 0 view .LVU475
 1415 0418 0A4A     		ldr	r2, .L125+8
 1416 041a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1417              	.LVL155:
 259:Core/algorithm/algorithm.c ****         *pch_spo2_valid  = 1;//  float_SPO2 =  -45.060*n_ratio_average* n_ratio_average/10000 + 30.
 1418              		.loc 1 259 9 is_stmt 1 view .LVU476
 259:Core/algorithm/algorithm.c ****         *pch_spo2_valid  = 1;//  float_SPO2 =  -45.060*n_ratio_average* n_ratio_average/10000 + 30.
 1419              		.loc 1 259 18 is_stmt 0 view .LVU477
 1420 041c 3360     		str	r3, [r6]
 260:Core/algorithm/algorithm.c ****     }
 1421              		.loc 1 260 9 is_stmt 1 view .LVU478
 260:Core/algorithm/algorithm.c ****     }
 1422              		.loc 1 260 26 is_stmt 0 view .LVU479
 1423 041e 0123     		movs	r3, #1
 1424              	.LVL156:
ARM GAS  /tmp/ccsmnm5j.s 			page 40


 260:Core/algorithm/algorithm.c ****     }
 1425              		.loc 1 260 26 view .LVU480
 1426 0420 3B70     		strb	r3, [r7]
 1427              	.LVL157:
 260:Core/algorithm/algorithm.c ****     }
 1428              		.loc 1 260 26 view .LVU481
 1429 0422 5BE7     		b	.L44
 1430              	.LVL158:
 1431              	.L93:
 255:Core/algorithm/algorithm.c **** 
 1432              		.loc 1 255 9 is_stmt 1 view .LVU482
 255:Core/algorithm/algorithm.c **** 
 1433              		.loc 1 255 25 is_stmt 0 view .LVU483
 1434 0424 3AAB     		add	r3, sp, #232
 1435 0426 03EB8202 		add	r2, r3, r2, lsl #2
 1436              	.LVL159:
 255:Core/algorithm/algorithm.c **** 
 1437              		.loc 1 255 25 view .LVU484
 1438 042a 52F8CC3C 		ldr	r3, [r2, #-204]
 1439              	.LVL160:
 255:Core/algorithm/algorithm.c **** 
 1440              		.loc 1 255 25 view .LVU485
 1441 042e F0E7     		b	.L94
 1442              	.L95:
 263:Core/algorithm/algorithm.c ****         *pch_spo2_valid  = 0; 
 1443              		.loc 1 263 9 is_stmt 1 view .LVU486
 263:Core/algorithm/algorithm.c ****         *pch_spo2_valid  = 0; 
 1444              		.loc 1 263 18 is_stmt 0 view .LVU487
 1445 0430 054B     		ldr	r3, .L125+12
 1446              	.LVL161:
 263:Core/algorithm/algorithm.c ****         *pch_spo2_valid  = 0; 
 1447              		.loc 1 263 18 view .LVU488
 1448 0432 3360     		str	r3, [r6]
 264:Core/algorithm/algorithm.c ****     }
 1449              		.loc 1 264 9 is_stmt 1 view .LVU489
 264:Core/algorithm/algorithm.c ****     }
 1450              		.loc 1 264 26 is_stmt 0 view .LVU490
 1451 0434 0023     		movs	r3, #0
 1452 0436 3B70     		strb	r3, [r7]
 1453 0438 50E7     		b	.L44
 1454              	.L126:
 1455 043a 00BF     		.align	2
 1456              	.L125:
 1457 043c 00000000 		.word	an_y
 1458 0440 00000000 		.word	an_x
 1459 0444 00000000 		.word	uch_spo2_table
 1460 0448 19FCFFFF 		.word	-999
 1461              		.cfi_endproc
 1462              	.LFE65:
 1464              		.section	.bss.an_y,"aw",%nobits
 1465              		.align	2
 1468              	an_y:
 1469 0000 00000000 		.space	2000
 1469      00000000 
 1469      00000000 
 1469      00000000 
 1469      00000000 
ARM GAS  /tmp/ccsmnm5j.s 			page 41


 1470              		.section	.bss.an_x,"aw",%nobits
 1471              		.align	2
 1474              	an_x:
 1475 0000 00000000 		.space	2000
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1476              		.section	.bss.an_dx,"aw",%nobits
 1477              		.align	2
 1480              	an_dx:
 1481 0000 00000000 		.space	1984
 1481      00000000 
 1481      00000000 
 1481      00000000 
 1481      00000000 
 1482              		.global	uch_spo2_table
 1483              		.section	.rodata.uch_spo2_table,"a"
 1484              		.align	2
 1487              	uch_spo2_table:
 1488 0000 5F5F5F60 		.ascii	"___```aaaaabbbbbccccccccddddddddddddddddddddccccccc"
 1488      60606161 
 1488      61616162 
 1488      62626262 
 1488      63636363 
 1489 0033 63626262 		.ascii	"cbbbbbbaaaa````___^^^]]]\\\\\\[[ZZYYYXXWWVVUUTTSRRQ"
 1489      62626261 
 1489      61616160 
 1489      6060605F 
 1489      5F5F5E5E 
 1490 0063 5150504F 		.ascii	"QPPONNMLLKJJIHHGFEEDCBBA@?>>=<;:98876543210/.-,+*)("
 1490      4E4E4D4C 
 1490      4C4B4A4A 
 1490      49484847 
 1490      46454544 
 1491 0096 27262524 		.ascii	"'&%$#\"!\037\036\035\034\033\032\031\027\026\025\024"
 1491      2322211F 
 1491      1E1D1C1B 
 1491      1A191716 
 1491      1514
 1492 00a8 1311100F 		.ascii	"\023\021\020\017\016\014\013\012\011\007\006\005\003"
 1492      0E0C0B0A 
 1492      09070605 
 1492      03
 1493 00b5 020100   		.ascii	"\002\001\000"
 1494              		.global	auw_hamm
 1495              		.section	.rodata.auw_hamm,"a"
 1496              		.align	2
 1499              	auw_hamm:
 1500 0000 2900     		.short	41
 1501 0002 1401     		.short	276
 1502 0004 0002     		.short	512
 1503 0006 1401     		.short	276
 1504 0008 2900     		.short	41
 1505 000a 00000000 		.space	52
 1505      00000000 
 1505      00000000 
ARM GAS  /tmp/ccsmnm5j.s 			page 42


 1505      00000000 
 1505      00000000 
 1506              		.text
 1507              	.Letext0:
 1508              		.file 2 "/nix/store/244x2dv48nan65bmpk2pv3pfl5s5jjn8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
 1509              		.file 3 "/nix/store/244x2dv48nan65bmpk2pv3pfl5s5jjn8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
ARM GAS  /tmp/ccsmnm5j.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 algorithm.c
     /tmp/ccsmnm5j.s:19     .text.maxim_peaks_above_min_height:00000000 $t
     /tmp/ccsmnm5j.s:25     .text.maxim_peaks_above_min_height:00000000 maxim_peaks_above_min_height
     /tmp/ccsmnm5j.s:148    .text.maxim_sort_ascend:00000000 $t
     /tmp/ccsmnm5j.s:154    .text.maxim_sort_ascend:00000000 maxim_sort_ascend
     /tmp/ccsmnm5j.s:221    .text.maxim_sort_indices_descend:00000000 $t
     /tmp/ccsmnm5j.s:227    .text.maxim_sort_indices_descend:00000000 maxim_sort_indices_descend
     /tmp/ccsmnm5j.s:300    .text.maxim_remove_close_peaks:00000000 $t
     /tmp/ccsmnm5j.s:306    .text.maxim_remove_close_peaks:00000000 maxim_remove_close_peaks
     /tmp/ccsmnm5j.s:432    .text.maxim_find_peaks:00000000 $t
     /tmp/ccsmnm5j.s:438    .text.maxim_find_peaks:00000000 maxim_find_peaks
     /tmp/ccsmnm5j.s:491    .text.maxim_heart_rate_and_oxygen_saturation:00000000 $t
     /tmp/ccsmnm5j.s:497    .text.maxim_heart_rate_and_oxygen_saturation:00000000 maxim_heart_rate_and_oxygen_saturation
     /tmp/ccsmnm5j.s:1218   .text.maxim_heart_rate_and_oxygen_saturation:00000314 $d
     /tmp/ccsmnm5j.s:1474   .bss.an_x:00000000 an_x
     /tmp/ccsmnm5j.s:1480   .bss.an_dx:00000000 an_dx
     /tmp/ccsmnm5j.s:1499   .rodata.auw_hamm:00000000 auw_hamm
     /tmp/ccsmnm5j.s:1468   .bss.an_y:00000000 an_y
     /tmp/ccsmnm5j.s:1228   .text.maxim_heart_rate_and_oxygen_saturation:00000330 $t
     /tmp/ccsmnm5j.s:1457   .text.maxim_heart_rate_and_oxygen_saturation:0000043c $d
     /tmp/ccsmnm5j.s:1487   .rodata.uch_spo2_table:00000000 uch_spo2_table
     /tmp/ccsmnm5j.s:1465   .bss.an_y:00000000 $d
     /tmp/ccsmnm5j.s:1471   .bss.an_x:00000000 $d
     /tmp/ccsmnm5j.s:1477   .bss.an_dx:00000000 $d
     /tmp/ccsmnm5j.s:1484   .rodata.uch_spo2_table:00000000 $d
     /tmp/ccsmnm5j.s:1496   .rodata.auw_hamm:00000000 $d

NO UNDEFINED SYMBOLS

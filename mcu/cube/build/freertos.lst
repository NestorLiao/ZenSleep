ARM GAS  /tmp/ccdLZJNS.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/freertos.c"
  18              		.section	.text.StartOled,"ax",%progbits
  19              		.align	1
  20              		.global	StartOled
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	StartOled:
  26              	.LFB70:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccdLZJNS.s 			page 2


  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END Variables */
  50:Core/Src/freertos.c **** /* Definitions for Oled */
  51:Core/Src/freertos.c **** osThreadId_t OledHandle;
  52:Core/Src/freertos.c **** const osThreadAttr_t Oled_attributes = {
  53:Core/Src/freertos.c ****   .name = "Oled",
  54:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  55:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  56:Core/Src/freertos.c **** };
  57:Core/Src/freertos.c **** /* Definitions for Max */
  58:Core/Src/freertos.c **** osThreadId_t MaxHandle;
  59:Core/Src/freertos.c **** const osThreadAttr_t Max_attributes = {
  60:Core/Src/freertos.c ****   .name = "Max",
  61:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  62:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityLow,
  63:Core/Src/freertos.c **** };
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** void StartOled(void *argument);
  71:Core/Src/freertos.c **** void StartMax(void *argument);
  72:Core/Src/freertos.c **** 
  73:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /**
  76:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  77:Core/Src/freertos.c ****   * @param  None
  78:Core/Src/freertos.c ****   * @retval None
  79:Core/Src/freertos.c ****   */
  80:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  81:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c ****   /* USER CODE END Init */
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  86:Core/Src/freertos.c ****   /* add mutexes, ... */
  87:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
ARM GAS  /tmp/ccdLZJNS.s 			page 3


  90:Core/Src/freertos.c ****   /* add semaphores, ... */
  91:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  94:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
  95:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
  98:Core/Src/freertos.c ****   /* add queues, ... */
  99:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c ****   /* Create the thread(s) */
 102:Core/Src/freertos.c ****   /* creation of Oled */
 103:Core/Src/freertos.c ****   OledHandle = osThreadNew(StartOled, NULL, &Oled_attributes);
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c ****   /* creation of Max */
 106:Core/Src/freertos.c ****   MaxHandle = osThreadNew(StartMax, NULL, &Max_attributes);
 107:Core/Src/freertos.c **** 
 108:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 109:Core/Src/freertos.c ****   /* add threads, ... */
 110:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 113:Core/Src/freertos.c ****   /* add events, ... */
 114:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c **** }
 117:Core/Src/freertos.c **** 
 118:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartOled */
 119:Core/Src/freertos.c **** /**
 120:Core/Src/freertos.c ****   * @brief  Function implementing the Oled thread.
 121:Core/Src/freertos.c ****   * @param  argument: Not used
 122:Core/Src/freertos.c ****   * @retval None
 123:Core/Src/freertos.c ****   */
 124:Core/Src/freertos.c **** /* USER CODE END Header_StartOled */
 125:Core/Src/freertos.c **** void StartOled(void *argument)
 126:Core/Src/freertos.c **** {
  27              		.loc 1 126 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33              		.loc 1 126 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
  40              	.L2:
 127:Core/Src/freertos.c ****   /* USER CODE BEGIN StartOled */
 128:Core/Src/freertos.c ****   /* Infinite loop */
 129:Core/Src/freertos.c ****   for(;;)
  41              		.loc 1 129 3 is_stmt 1 discriminator 1 view .LVU2
 130:Core/Src/freertos.c ****   {
 131:Core/Src/freertos.c ****     osDelay(1);
ARM GAS  /tmp/ccdLZJNS.s 			page 4


  42              		.loc 1 131 5 discriminator 1 view .LVU3
  43 0002 0120     		movs	r0, #1
  44 0004 FFF7FEFF 		bl	osDelay
  45              	.LVL2:
 129:Core/Src/freertos.c ****   {
  46              		.loc 1 129 3 discriminator 1 view .LVU4
  47 0008 FBE7     		b	.L2
  48              		.cfi_endproc
  49              	.LFE70:
  51              		.section	.text.StartMax,"ax",%progbits
  52              		.align	1
  53              		.global	StartMax
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	StartMax:
  59              	.LFB71:
 132:Core/Src/freertos.c ****   }
 133:Core/Src/freertos.c ****   /* USER CODE END StartOled */
 134:Core/Src/freertos.c **** }
 135:Core/Src/freertos.c **** 
 136:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartMax */
 137:Core/Src/freertos.c **** /**
 138:Core/Src/freertos.c **** * @brief Function implementing the Max thread.
 139:Core/Src/freertos.c **** * @param argument: Not used
 140:Core/Src/freertos.c **** * @retval None
 141:Core/Src/freertos.c **** */
 142:Core/Src/freertos.c **** /* USER CODE END Header_StartMax */
 143:Core/Src/freertos.c **** void StartMax(void *argument)
 144:Core/Src/freertos.c **** {
  60              		.loc 1 144 1 view -0
  61              		.cfi_startproc
  62              		@ Volatile: function does not return.
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              	.LVL3:
  66              		.loc 1 144 1 is_stmt 0 view .LVU6
  67 0000 08B5     		push	{r3, lr}
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 3, -8
  71              		.cfi_offset 14, -4
  72              	.LVL4:
  73              	.L5:
 145:Core/Src/freertos.c ****   /* USER CODE BEGIN StartMax */
 146:Core/Src/freertos.c ****   /* Infinite loop */
 147:Core/Src/freertos.c ****   for(;;)
  74              		.loc 1 147 3 is_stmt 1 discriminator 1 view .LVU7
 148:Core/Src/freertos.c ****   {
 149:Core/Src/freertos.c ****     osDelay(1);
  75              		.loc 1 149 5 discriminator 1 view .LVU8
  76 0002 0120     		movs	r0, #1
  77 0004 FFF7FEFF 		bl	osDelay
  78              	.LVL5:
 147:Core/Src/freertos.c ****   {
  79              		.loc 1 147 3 discriminator 1 view .LVU9
  80 0008 FBE7     		b	.L5
ARM GAS  /tmp/ccdLZJNS.s 			page 5


  81              		.cfi_endproc
  82              	.LFE71:
  84              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  85              		.align	1
  86              		.global	MX_FREERTOS_Init
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	MX_FREERTOS_Init:
  92              	.LFB69:
  80:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  93              		.loc 1 80 29 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 08B5     		push	{r3, lr}
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
 103:Core/Src/freertos.c **** 
 102              		.loc 1 103 3 view .LVU11
 103:Core/Src/freertos.c **** 
 103              		.loc 1 103 16 is_stmt 0 view .LVU12
 104 0002 074A     		ldr	r2, .L9
 105 0004 0021     		movs	r1, #0
 106 0006 0748     		ldr	r0, .L9+4
 107 0008 FFF7FEFF 		bl	osThreadNew
 108              	.LVL6:
 103:Core/Src/freertos.c **** 
 109              		.loc 1 103 14 view .LVU13
 110 000c 064B     		ldr	r3, .L9+8
 111 000e 1860     		str	r0, [r3]
 106:Core/Src/freertos.c **** 
 112              		.loc 1 106 3 is_stmt 1 view .LVU14
 106:Core/Src/freertos.c **** 
 113              		.loc 1 106 15 is_stmt 0 view .LVU15
 114 0010 064A     		ldr	r2, .L9+12
 115 0012 0021     		movs	r1, #0
 116 0014 0648     		ldr	r0, .L9+16
 117 0016 FFF7FEFF 		bl	osThreadNew
 118              	.LVL7:
 106:Core/Src/freertos.c **** 
 119              		.loc 1 106 13 view .LVU16
 120 001a 064B     		ldr	r3, .L9+20
 121 001c 1860     		str	r0, [r3]
 116:Core/Src/freertos.c **** 
 122              		.loc 1 116 1 view .LVU17
 123 001e 08BD     		pop	{r3, pc}
 124              	.L10:
 125              		.align	2
 126              	.L9:
 127 0020 00000000 		.word	Oled_attributes
 128 0024 00000000 		.word	StartOled
 129 0028 00000000 		.word	OledHandle
 130 002c 00000000 		.word	Max_attributes
 131 0030 00000000 		.word	StartMax
ARM GAS  /tmp/ccdLZJNS.s 			page 6


 132 0034 00000000 		.word	MaxHandle
 133              		.cfi_endproc
 134              	.LFE69:
 136              		.global	Max_attributes
 137              		.section	.rodata.str1.4,"aMS",%progbits,1
 138              		.align	2
 139              	.LC0:
 140 0000 4D617800 		.ascii	"Max\000"
 141              		.section	.rodata.Max_attributes,"a"
 142              		.align	2
 145              	Max_attributes:
 146 0000 00000000 		.word	.LC0
 147 0004 00000000 		.space	16
 147      00000000 
 147      00000000 
 147      00000000 
 148 0014 00020000 		.word	512
 149 0018 08000000 		.word	8
 150 001c 00000000 		.space	8
 150      00000000 
 151              		.global	MaxHandle
 152              		.section	.bss.MaxHandle,"aw",%nobits
 153              		.align	2
 156              	MaxHandle:
 157 0000 00000000 		.space	4
 158              		.global	Oled_attributes
 159              		.section	.rodata.str1.4
 160              		.align	2
 161              	.LC1:
 162 0004 4F6C6564 		.ascii	"Oled\000"
 162      00
 163              		.section	.rodata.Oled_attributes,"a"
 164              		.align	2
 167              	Oled_attributes:
 168 0000 04000000 		.word	.LC1
 169 0004 00000000 		.space	16
 169      00000000 
 169      00000000 
 169      00000000 
 170 0014 00020000 		.word	512
 171 0018 18000000 		.word	24
 172 001c 00000000 		.space	8
 172      00000000 
 173              		.global	OledHandle
 174              		.section	.bss.OledHandle,"aw",%nobits
 175              		.align	2
 178              	OledHandle:
 179 0000 00000000 		.space	4
 180              		.text
 181              	.Letext0:
 182              		.file 2 "/nix/store/244x2dv48nan65bmpk2pv3pfl5s5jjn8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
 183              		.file 3 "/nix/store/244x2dv48nan65bmpk2pv3pfl5s5jjn8-gcc-arm-embedded-12.3.rel1/arm-none-eabi/incl
 184              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/ccdLZJNS.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
     /tmp/ccdLZJNS.s:19     .text.StartOled:00000000 $t
     /tmp/ccdLZJNS.s:25     .text.StartOled:00000000 StartOled
     /tmp/ccdLZJNS.s:52     .text.StartMax:00000000 $t
     /tmp/ccdLZJNS.s:58     .text.StartMax:00000000 StartMax
     /tmp/ccdLZJNS.s:85     .text.MX_FREERTOS_Init:00000000 $t
     /tmp/ccdLZJNS.s:91     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
     /tmp/ccdLZJNS.s:127    .text.MX_FREERTOS_Init:00000020 $d
     /tmp/ccdLZJNS.s:167    .rodata.Oled_attributes:00000000 Oled_attributes
     /tmp/ccdLZJNS.s:178    .bss.OledHandle:00000000 OledHandle
     /tmp/ccdLZJNS.s:145    .rodata.Max_attributes:00000000 Max_attributes
     /tmp/ccdLZJNS.s:156    .bss.MaxHandle:00000000 MaxHandle
     /tmp/ccdLZJNS.s:138    .rodata.str1.4:00000000 $d
     /tmp/ccdLZJNS.s:142    .rodata.Max_attributes:00000000 $d
     /tmp/ccdLZJNS.s:153    .bss.MaxHandle:00000000 $d
     /tmp/ccdLZJNS.s:164    .rodata.Oled_attributes:00000000 $d
     /tmp/ccdLZJNS.s:175    .bss.OledHandle:00000000 $d

UNDEFINED SYMBOLS
osDelay
osThreadNew
